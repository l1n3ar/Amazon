{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      let index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\"Item not found\");\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/src/Reducer.js"],"names":["initialState","basket","user","reducer","state","action","type","item","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKP,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACE,IAAzB;AAFH,OAAP;;AAIF,SAAK,oBAAL;AACE,UAAIC,KAAK,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACM,EAD/B,CAAZ;AAIA,UAAIC,SAAS,GAAG,CAAC,GAAGR,KAAK,CAACH,MAAV,CAAhB;;AAEA,UAAIO,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACLM,QAAAA,OAAO,CAACC,IAAR,CAAa,gBAAb;AACD;;AACD,aAAO,EACL,GAAGX,KADE;AAELH,QAAAA,MAAM,EAAEW;AAFH,OAAP;;AAIF;AACE,aAAOR,KAAP;AAvBJ;AAyBD","sourcesContent":["export const initialState = {\n  basket: [],\n  user: null,\n};\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n    case \"REMOVE_FROM_BASKET\":\n      let index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\"Item not found\");\n      }\n      return {\n        ...state,\n        basket: newBasket,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}