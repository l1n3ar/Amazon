{"ast":null,"code":"import _get from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _construct from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _slicedToArray from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _inherits from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _toConsumableArray from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@babel/runtime/regenerator/index.js\";\nimport { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nvar l = /*#__PURE__*/function () {\n  function l(t) {\n    _classCallCheck(this, l);\n\n    this.uid = t;\n  }\n\n  _createClass(l, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n\n  }, {\n    key: \"toKey\",\n    value: function toKey() {\n      return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.uid === this.uid;\n    }\n  }]);\n\n  return l;\n}();\n/** A user with a null UID. */\n\n\nl.UNAUTHENTICATED = new l(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), l.MOCK_USER = new l(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar f = \"9.6.3\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d = new Logger(\"@firebase/firestore\");\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\nfunction w(t) {\n  d.setLogLevel(t);\n}\n\nfunction _m(t) {\n  if (d.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, n = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      n[_key - 1] = arguments[_key];\n    }\n\n    var e = n.map(_);\n    d.debug.apply(d, [\"Firestore (\".concat(f, \"): \").concat(t)].concat(_toConsumableArray(e)));\n  }\n}\n\nfunction p(t) {\n  if (d.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, n = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      n[_key2 - 1] = arguments[_key2];\n    }\n\n    var e = n.map(_);\n    d.error.apply(d, [\"Firestore (\".concat(f, \"): \").concat(t)].concat(_toConsumableArray(e)));\n  }\n}\n/**\n * @internal\n */\n\n\nfunction y(t) {\n  if (d.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, n = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      n[_key3 - 1] = arguments[_key3];\n    }\n\n    var e = n.map(_);\n    d.warn.apply(d, [\"Firestore (\".concat(f, \"): \").concat(t)].concat(_toConsumableArray(e)));\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction _(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return n = t, JSON.stringify(n);\n  } catch (n) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction g() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  var n = \"FIRESTORE (\".concat(f, \") INTERNAL ASSERTION FAILED: \") + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw p(n), new Error(n);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction v(t, n) {\n  t || g();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction b(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nn) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar E = \"ok\",\n    T = \"cancelled\",\n    I = \"unknown\",\n    A = \"invalid-argument\",\n    R = \"deadline-exceeded\",\n    P = \"not-found\",\n    V = \"already-exists\",\n    D = \"permission-denied\",\n    N = \"unauthenticated\",\n    $ = \"resource-exhausted\",\n    S = \"failed-precondition\",\n    F = \"aborted\",\n    x = \"out-of-range\",\n    q = \"unimplemented\",\n    O = \"internal\",\n    C = \"unavailable\",\n    L = \"data-loss\";\n/** An error returned by a Firestore operation. */\n\nvar U = /*#__PURE__*/function (_FirebaseError) {\n  _inherits(U, _FirebaseError);\n\n  var _super = _createSuper(U);\n\n  /** @hideconstructor */\n  function U(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  n) {\n    var _this;\n\n    _classCallCheck(this, U);\n\n    _this = _super.call(this, t, n), _this.code = t, _this.message = n, // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    _this.toString = function () {\n      return \"\".concat(_this.name, \": [code=\").concat(_this.code, \"]: \").concat(_this.message);\n    };\n    return _this;\n  }\n\n  return _createClass(U);\n}(FirebaseError);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar k = /*#__PURE__*/_createClass(function k() {\n  var _this2 = this;\n\n  _classCallCheck(this, k);\n\n  this.promise = new Promise(function (t, n) {\n    _this2.resolve = t, _this2.reject = n;\n  });\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar j = /*#__PURE__*/_createClass(function j(t, n) {\n  _classCallCheck(this, j);\n\n  this.user = n, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", \"Bearer \".concat(t));\n});\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nvar M = /*#__PURE__*/function () {\n  function M() {\n    _classCallCheck(this, M);\n  }\n\n  _createClass(M, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, n) {\n      // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return n(l.UNAUTHENTICATED);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return M;\n}();\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nvar B = /*#__PURE__*/function () {\n  function B(t) {\n    _classCallCheck(this, B);\n\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  _createClass(B, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(this.token);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, n) {\n      var _this3 = this;\n\n      this.changeListener = n, // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return n(_this3.token.user);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.changeListener = null;\n    }\n  }]);\n\n  return B;\n}();\n/** Credential provider for the Lite SDK. */\n\n\nvar z = /*#__PURE__*/function () {\n  function z(t) {\n    var _this4 = this;\n\n    _classCallCheck(this, z);\n\n    this.auth = null, t.onInit(function (t) {\n      _this4.auth = t;\n    });\n  }\n\n  _createClass(z, [{\n    key: \"getToken\",\n    value: function getToken() {\n      var _this5 = this;\n\n      return this.auth ? this.auth.getToken().then(function (t) {\n        return t ? (v(\"string\" == typeof t.accessToken), new j(t.accessToken, new l(_this5.auth.getUid()))) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, n) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return z;\n}();\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nvar G = /*#__PURE__*/_createClass(function G(t, n, e) {\n  _classCallCheck(this, G);\n\n  this.type = \"FirstParty\", this.user = l.FIRST_PARTY, this.headers = new Map(), this.headers.set(\"X-Goog-AuthUser\", n);\n  var r = t.auth.getAuthHeaderValueForFirstParty([]);\n  r && this.headers.set(\"Authorization\", r), e && this.headers.set(\"X-Goog-Iam-Authorization-Token\", e);\n});\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nvar Q = /*#__PURE__*/function () {\n  function Q(t, n, e) {\n    _classCallCheck(this, Q);\n\n    this.t = t, this.i = n, this.o = e;\n  }\n\n  _createClass(Q, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n  }, {\n    key: \"start\",\n    value: function start(t, n) {\n      // Fire with initial uid.\n      t.enqueueRetryable(function () {\n        return n(l.FIRST_PARTY);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }]);\n\n  return Q;\n}();\n\nvar W = /*#__PURE__*/_createClass(function W(t) {\n  _classCallCheck(this, W);\n\n  this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n});\n/** AppCheck token provider for the Lite SDK. */\n\n\nvar Y = /*#__PURE__*/function () {\n  function Y(t) {\n    var _this6 = this;\n\n    _classCallCheck(this, Y);\n\n    this.u = t, this.appCheck = null, t.onInit(function (t) {\n      _this6.appCheck = t;\n    });\n  }\n\n  _createClass(Y, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return this.appCheck ? this.appCheck.getToken().then(function (t) {\n        return t ? (v(\"string\" == typeof t.token), new W(t.token)) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, n) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return Y;\n}();\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar H = /*#__PURE__*/_createClass(\n/**\n * Constructs a DatabaseInfo using the provided host, databaseId and\n * persistenceKey.\n *\n * @param databaseId - The database to use.\n * @param appId - The Firebase App Id.\n * @param persistenceKey - A unique identifier for this Firestore's local\n * storage (used in conjunction with the databaseId).\n * @param host - The Firestore backend host to connect to.\n * @param ssl - Whether to use SSL when connecting.\n * @param forceLongPolling - Whether to use the forceLongPolling option\n * when using WebChannel as the network transport.\n * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n * option when using WebChannel as the network transport.\n * @param useFetchStreams Whether to use the Fetch API instead of\n * XMLHTTPRequest\n */\nfunction H(t, n, e, r, s, i, o, u) {\n  _classCallCheck(this, H);\n\n  this.databaseId = t, this.appId = n, this.persistenceKey = e, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n});\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nvar K = /*#__PURE__*/function () {\n  function K(t, n) {\n    _classCallCheck(this, K);\n\n    this.projectId = t, this.database = n || \"(default)\";\n  }\n\n  _createClass(K, [{\n    key: \"isDefaultDatabase\",\n    get: function get() {\n      return \"(default)\" === this.database;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof K && t.projectId === this.projectId && t.database === this.database;\n    }\n  }]);\n\n  return K;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nvar J = /*#__PURE__*/function () {\n  function J(t, n, e) {\n    _classCallCheck(this, J);\n\n    void 0 === n ? n = 0 : n > t.length && g(), void 0 === e ? e = t.length - n : e > t.length - n && g(), this.segments = t, this.offset = n, this.len = e;\n  }\n\n  _createClass(J, [{\n    key: \"length\",\n    get: function get() {\n      return this.len;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return 0 === J.comparator(this, t);\n    }\n  }, {\n    key: \"child\",\n    value: function child(t) {\n      var n = this.segments.slice(this.offset, this.limit());\n      return t instanceof J ? t.forEach(function (t) {\n        n.push(t);\n      }) : n.push(t), this.construct(n);\n    }\n    /** The index of one past the last segment of the path. */\n\n  }, {\n    key: \"limit\",\n    value: function limit() {\n      return this.offset + this.length;\n    }\n  }, {\n    key: \"popFirst\",\n    value: function popFirst(t) {\n      return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n  }, {\n    key: \"popLast\",\n    value: function popLast() {\n      return this.construct(this.segments, this.offset, this.length - 1);\n    }\n  }, {\n    key: \"firstSegment\",\n    value: function firstSegment() {\n      return this.segments[this.offset];\n    }\n  }, {\n    key: \"lastSegment\",\n    value: function lastSegment() {\n      return this.get(this.length - 1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      return this.segments[this.offset + t];\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return 0 === this.length;\n    }\n  }, {\n    key: \"isPrefixOf\",\n    value: function isPrefixOf(t) {\n      if (t.length < this.length) return !1;\n\n      for (var n = 0; n < this.length; n++) {\n        if (this.get(n) !== t.get(n)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"isImmediateParentOf\",\n    value: function isImmediateParentOf(t) {\n      if (this.length + 1 !== t.length) return !1;\n\n      for (var n = 0; n < this.length; n++) {\n        if (this.get(n) !== t.get(n)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      for (var n = this.offset, e = this.limit(); n < e; n++) {\n        t(this.segments[n]);\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.segments.slice(this.offset, this.limit());\n    }\n  }], [{\n    key: \"comparator\",\n    value: function comparator(t, n) {\n      var e = Math.min(t.length, n.length);\n\n      for (var r = 0; r < e; r++) {\n        var _e2 = t.get(r),\n            s = n.get(r);\n\n        if (_e2 < s) return -1;\n        if (_e2 > s) return 1;\n      }\n\n      return t.length < n.length ? -1 : t.length > n.length ? 1 : 0;\n    }\n  }]);\n\n  return J;\n}();\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nvar X = /*#__PURE__*/function (_J) {\n  _inherits(X, _J);\n\n  var _super2 = _createSuper(X);\n\n  function X() {\n    _classCallCheck(this, X);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(X, [{\n    key: \"construct\",\n    value: function construct(t, n, e) {\n      return new X(t, n, e);\n    }\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      return this.toArray().join(\"/\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      var n = [];\n\n      for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        t[_key4] = arguments[_key4];\n      }\n\n      for (var _i = 0, _t2 = t; _i < _t2.length; _i++) {\n        var e = _t2[_i];\n        if (e.indexOf(\"//\") >= 0) throw new U(A, \"Invalid segment (\".concat(e, \"). Paths must not contain // in them.\")); // Strip leading and traling slashed.\n\n        n.push.apply(n, _toConsumableArray(e.split(\"/\").filter(function (t) {\n          return t.length > 0;\n        })));\n      }\n\n      return new X(n);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new X([]);\n    }\n  }]);\n\n  return X;\n}(J);\n\nvar Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nvar tt = /*#__PURE__*/function (_J2) {\n  _inherits(tt, _J2);\n\n  var _super3 = _createSuper(tt);\n\n  function tt() {\n    _classCallCheck(this, tt);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(tt, [{\n    key: \"construct\",\n    value: function construct(t, n, e) {\n      return new tt(t, n, e);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      return this.toArray().map(function (t) {\n        return t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t;\n      }).join(\".\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */\n\n  }, {\n    key: \"isKeyField\",\n    value: function isKeyField() {\n      return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */\n\n  }], [{\n    key: \"isValidIdentifier\",\n    value: function isValidIdentifier(t) {\n      return Z.test(t);\n    }\n  }, {\n    key: \"keyField\",\n    value: function keyField() {\n      return new tt([\"__name__\"]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n\n  }, {\n    key: \"fromServerFormat\",\n    value: function fromServerFormat(t) {\n      var n = [];\n      var e = \"\",\n          r = 0;\n\n      var s = function s() {\n        if (0 === e.length) throw new U(A, \"Invalid field path (\".concat(t, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"));\n        n.push(e), e = \"\";\n      };\n\n      var i = !1;\n\n      for (; r < t.length;) {\n        var _n2 = t[r];\n\n        if (\"\\\\\" === _n2) {\n          if (r + 1 === t.length) throw new U(A, \"Path has trailing escape character: \" + t);\n          var _n3 = t[r + 1];\n          if (\"\\\\\" !== _n3 && \".\" !== _n3 && \"`\" !== _n3) throw new U(A, \"Path has invalid escape sequence: \" + t);\n          e += _n3, r += 2;\n        } else \"`\" === _n2 ? (i = !i, r++) : \".\" !== _n2 || i ? (e += _n2, r++) : (s(), r++);\n      }\n\n      if (s(), i) throw new U(A, \"Unterminated ` in path: \" + t);\n      return new tt(n);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new tt([]);\n    }\n  }]);\n\n  return tt;\n}(J);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nvar nt = /*#__PURE__*/function () {\n  function nt(t) {\n    _classCallCheck(this, nt);\n\n    this.path = t;\n  }\n\n  _createClass(nt, [{\n    key: \"hasCollectionId\",\n    value:\n    /** Returns true if the document is in the specified collectionId. */\n    function hasCollectionId(t) {\n      return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.path.toString();\n    }\n  }], [{\n    key: \"fromPath\",\n    value: function fromPath(t) {\n      return new nt(X.fromString(t));\n    }\n  }, {\n    key: \"fromName\",\n    value: function fromName(t) {\n      return new nt(X.fromString(t).popFirst(5));\n    }\n  }, {\n    key: \"comparator\",\n    value: function comparator(t, n) {\n      return X.comparator(t.path, n.path);\n    }\n  }, {\n    key: \"isDocumentKey\",\n    value: function isDocumentKey(t) {\n      return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n\n  }, {\n    key: \"fromSegments\",\n    value: function fromSegments(t) {\n      return new nt(new X(t.slice()));\n    }\n  }]);\n\n  return nt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction et(t, n, e) {\n  if (!e) throw new U(A, \"Function \".concat(t, \"() cannot be called with an empty \").concat(n, \".\"));\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction rt(t) {\n  if (!nt.isDocumentKey(t)) throw new U(A, \"Invalid document reference. Document references must have an even number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction st(t) {\n  if (nt.isDocumentKey(t)) throw new U(A, \"Invalid collection reference. Collection references must have an odd number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction it(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = \"\".concat(t.substring(0, 20), \"...\")), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      var n =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return n ? \"a custom \".concat(n, \" object\") : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nn) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof n)) {\n    if (n.name === t.constructor.name) throw new U(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      var e = it(t);\n      throw new U(A, \"Expected type '\".concat(n.name, \"', but it was: \").concat(e));\n    }\n  }\n\n  return t;\n}\n\nfunction ut(t, n) {\n  if (n <= 0) throw new U(A, \"Function \".concat(t, \"() requires a positive number, but it was: \").concat(n, \".\"));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction ct(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction at(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ht = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\nvar lt, ft;\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\n\nfunction dt(t) {\n  if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I; // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n\n  switch (t) {\n    case 200:\n      // OK\n      return E;\n\n    case 400:\n      // Bad Request\n      return S;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401:\n      // Unauthorized\n      return N;\n\n    case 403:\n      // Forbidden\n      return D;\n\n    case 404:\n      // Not Found\n      return P;\n\n    case 409:\n      // Conflict\n      return F;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416:\n      // Range Not Satisfiable\n      return x;\n\n    case 429:\n      // Too Many Requests\n      return $;\n\n    case 499:\n      // Client Closed Request\n      return T;\n\n    case 500:\n      // Internal Server Error\n      return I;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501:\n      // Unimplemented\n      return q;\n\n    case 503:\n      // Service Unavailable\n      return C;\n\n    case 504:\n      // Gateway Timeout\n      return R;\n\n    default:\n      return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? O : I;\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n\n\n(ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", ft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", ft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", ft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", ft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", ft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", ft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", ft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nvar wt = /*#__PURE__*/function (_ref) {\n  _inherits(wt, _ref);\n\n  var _super4 = _createSuper(wt);\n\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  function wt(t, n) {\n    var _this7;\n\n    _classCallCheck(this, wt);\n\n    _this7 = _super4.call(this, t), _this7.I = n;\n    return _this7;\n  }\n\n  _createClass(wt, [{\n    key: \"A\",\n    value: function A(t, n) {\n      throw new Error(\"Not supported by FetchConnection\");\n    }\n  }, {\n    key: \"v\",\n    value: function () {\n      var _v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(t, n, e, r) {\n        var s, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                s = JSON.stringify(r);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.I(n, {\n                  method: \"POST\",\n                  headers: e,\n                  body: s\n                });\n\n              case 4:\n                i = _context.sent;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                throw new U(dt(_context.t0.status), \"Request failed with error: \" + _context.t0.statusText);\n\n              case 10:\n                if (i.ok) {\n                  _context.next = 12;\n                  break;\n                }\n\n                throw new U(dt(i.status), \"Request failed with error: \" + i.statusText);\n\n              case 12:\n                return _context.abrupt(\"return\", i.json());\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function v(_x, _x2, _x3, _x4) {\n        return _v.apply(this, arguments);\n      }\n\n      return v;\n    }()\n  }]);\n\n  return wt;\n}(\n/*#__PURE__*/\n\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nfunction () {\n  function _class(t) {\n    _classCallCheck(this, _class);\n\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    var n = t.ssl ? \"https\" : \"http\";\n    this.h = n + \"://\" + t.host, this.l = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  _createClass(_class, [{\n    key: \"m\",\n    value: function m(t, n, e, r, s) {\n      var i = this.p(t, n);\n\n      _m(\"RestConnection\", \"Sending: \", i, e);\n\n      var o = {};\n      return this.g(o, r, s), this.v(t, i, o, e).then(function (t) {\n        return _m(\"RestConnection\", \"Received: \", t), t;\n      }, function (n) {\n        throw y(\"RestConnection\", \"\".concat(t, \" failed with error: \"), n, \"url: \", i, \"request:\", e), n;\n      });\n    }\n  }, {\n    key: \"T\",\n    value: function T(t, n, e, r, s) {\n      // The REST API automatically aggregates all of the streamed results, so we\n      // can just use the normal invoke() method.\n      return this.m(t, n, e, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n\n  }, {\n    key: \"g\",\n    value:\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n    function g(t, n, e) {\n      t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, // Content-Type: text/plain will avoid preflight requests which might\n      // mess with CORS and redirects by proxies. If we add custom headers\n      // we will need to change this code to potentially use the $httpOverwrite\n      // parameter supported by ESF to avoid triggering preflight requests.\n      t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), n && n.headers.forEach(function (n, e) {\n        return t[e] = n;\n      }), e && e.headers.forEach(function (n, e) {\n        return t[e] = n;\n      });\n    }\n  }, {\n    key: \"p\",\n    value: function p(t, n) {\n      var e = ht[t];\n      return \"\".concat(this.h, \"/v1/\").concat(n, \":\").concat(e);\n    }\n  }]);\n\n  return _class;\n}());\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the HTTP connection for the REST API. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction mt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  var n = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n      e = new Uint8Array(t);\n  if (n && \"function\" == typeof n.getRandomValues) n.getRandomValues(e);else // Falls back to Math.random\n    for (var _n4 = 0; _n4 < t; _n4++) {\n      e[_n4] = Math.floor(256 * Math.random());\n    }\n  return e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar pt = /*#__PURE__*/function () {\n  function pt() {\n    _classCallCheck(this, pt);\n  }\n\n  _createClass(pt, null, [{\n    key: \"R\",\n    value: function R() {\n      // Alphanumeric characters\n      var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          n = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n      var e = \"\";\n\n      for (; e.length < 20;) {\n        var r = mt(40);\n\n        for (var s = 0; s < r.length; ++s) {\n          // Only accept values that are [0, maxMultiple), this ensures they can\n          // be evenly mapped to indices of `chars` via a modulo operation.\n          e.length < 20 && r[s] < n && (e += t.charAt(r[s] % t.length));\n        }\n      }\n\n      return e;\n    }\n  }]);\n\n  return pt;\n}();\n\nfunction yt(t, n) {\n  return t < n ? -1 : t > n ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction _t(t, n, e) {\n  return t.length === n.length && t.every(function (t, r) {\n    return e(t, n[r]);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nvar gt = /*#__PURE__*/function () {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  function gt(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  n) {\n    _classCallCheck(this, gt);\n\n    if (this.seconds = t, this.nanoseconds = n, n < 0) throw new U(A, \"Timestamp nanoseconds out of range: \" + n);\n    if (n >= 1e9) throw new U(A, \"Timestamp nanoseconds out of range: \" + n);\n    if (t < -62135596800) throw new U(A, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  _createClass(gt, [{\n    key: \"toDate\",\n    value:\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    function toDate() {\n      return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n\n  }, {\n    key: \"toMillis\",\n    value: function toMillis() {\n      return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        seconds: this.seconds,\n        nanoseconds: this.nanoseconds\n      };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */\n\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      // This method returns a string of the form <seconds>.<nanoseconds> where\n      // <seconds> is translated to have a non-negative value and both <seconds>\n      // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n      // Strings with this format then have a lexiographical ordering that matches\n      // the expected ordering. The <seconds> translation is done to avoid having\n      // a leading negative sign (i.e. a leading '-' character) in its string\n      // representation, which would affect its lexiographical ordering.\n      var t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n      // 'seconds' values.\n\n      return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n  }], [{\n    key: \"now\",\n    value: function now() {\n      return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n\n  }, {\n    key: \"fromDate\",\n    value: function fromDate(t) {\n      return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n\n  }, {\n    key: \"fromMillis\",\n    value: function fromMillis(t) {\n      var n = Math.floor(t / 1e3),\n          e = Math.floor(1e6 * (t - 1e3 * n));\n      return new gt(n, e);\n    }\n  }]);\n\n  return gt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nvar vt = /*#__PURE__*/function () {\n  function vt(t) {\n    _classCallCheck(this, vt);\n\n    this.timestamp = t;\n  }\n\n  _createClass(vt, [{\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return this.timestamp._compareTo(t.timestamp);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */\n\n  }, {\n    key: \"toMicroseconds\",\n    value: function toMicroseconds() {\n      // Convert to microseconds.\n      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n  }, {\n    key: \"toTimestamp\",\n    value: function toTimestamp() {\n      return this.timestamp;\n    }\n  }], [{\n    key: \"fromTimestamp\",\n    value: function fromTimestamp(t) {\n      return new vt(t);\n    }\n  }, {\n    key: \"min\",\n    value: function min() {\n      return new vt(new gt(0, 0));\n    }\n  }]);\n\n  return vt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction bt(t) {\n  var n = 0;\n\n  for (var e in t) {\n    Object.prototype.hasOwnProperty.call(t, e) && n++;\n  }\n\n  return n;\n}\n\nfunction Et(t, n) {\n  for (var e in t) {\n    Object.prototype.hasOwnProperty.call(t, e) && n(e, t[e]);\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nvar Tt = /*#__PURE__*/function () {\n  function Tt(t) {\n    _classCallCheck(this, Tt);\n\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(tt.comparator);\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n\n\n  _createClass(Tt, [{\n    key: \"covers\",\n    value: function covers(t) {\n      var _iterator = _createForOfIteratorHelper(this.fields),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var n = _step.value;\n          if (n.isPrefixOf(t)) return !0;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return !1;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return _t(this.fields, t.fields, function (t, n) {\n        return t.isEqual(n);\n      });\n    }\n  }]);\n\n  return Tt;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nvar It = /*#__PURE__*/function (_Symbol$iterator) {\n  function It(t) {\n    _classCallCheck(this, It);\n\n    this.binaryString = t;\n  }\n\n  _createClass(It, [{\n    key: _Symbol$iterator,\n    value: function value() {\n      var _this8 = this;\n\n      var t = 0;\n      return {\n        next: function next() {\n          return t < _this8.binaryString.length ? {\n            value: _this8.binaryString.charCodeAt(t++),\n            done: !1\n          } : {\n            value: void 0,\n            done: !0\n          };\n        }\n      };\n    }\n  }, {\n    key: \"toBase64\",\n    value: function toBase64() {\n      return t = this.binaryString, btoa(t);\n      /** Converts a binary string to a Base64 encoded string. */\n\n      var t;\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return function (t) {\n        var n = new Uint8Array(t.length);\n\n        for (var e = 0; e < t.length; e++) {\n          n[e] = t.charCodeAt(e);\n        }\n\n        return n;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n      (this.binaryString);\n    }\n  }, {\n    key: \"approximateByteSize\",\n    value: function approximateByteSize() {\n      return 2 * this.binaryString.length;\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return yt(this.binaryString, t.binaryString);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.binaryString === t.binaryString;\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      var n = atob(t);\n      return new It(n);\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      var n =\n      /**\n      * Helper function to convert an Uint8array to a binary string.\n      */\n      function (t) {\n        var n = \"\";\n\n        for (var e = 0; e < t.length; ++e) {\n          n += String.fromCharCode(t[e]);\n        }\n\n        return n;\n      }\n      /**\n      * Helper function to convert a binary string to an Uint8Array.\n      */\n      (t);\n\n      return new It(n);\n    }\n  }]);\n\n  return It;\n}(Symbol.iterator);\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\nvar At = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction Rt(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (v(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    var n = 0;\n    var e = At.exec(t);\n\n    if (v(!!e), e[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      var _t3 = e[1];\n      _t3 = (_t3 + \"000000000\").substr(0, 9), n = Number(_t3);\n    } // Parse the date to get the seconds.\n\n\n    var r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: n\n    };\n  }\n\n  return {\n    seconds: Pt(t.seconds),\n    nanos: Pt(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction Pt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction Vt(t) {\n  return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction Dt(t) {\n  var n, e;\n  return \"server_timestamp\" === (null === (e = ((null === (n = null == t ? void 0 : t.mapValue) || void 0 === n ? void 0 : n.fields) || {}).__type__) || void 0 === e ? void 0 : e.stringValue);\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction Nt(t) {\n  var n = t.mapValue.fields.__previous_value__;\n  return Dt(n) ? Nt(n) : n;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction $t(t) {\n  var n = Rt(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new gt(n.seconds, n.nanos);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Extracts the backend's type order for the provided value. */\n\n\nfunction St(t) {\n  return \"nullValue\" in t ? 0\n  /* NullValue */\n  : \"booleanValue\" in t ? 1\n  /* BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* StringValue */\n  : \"bytesValue\" in t ? 6\n  /* BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* ArrayValue */\n  : \"mapValue\" in t ? Dt(t) ? 4\n  /* ServerTimestampValue */\n  : 10\n  /* ObjectValue */\n  : g();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction Ft(t, n) {\n  if (t === n) return !0;\n  var e = St(t);\n  if (e !== St(n)) return !1;\n\n  switch (e) {\n    case 0\n    /* NullValue */\n    :\n      return !0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return t.booleanValue === n.booleanValue;\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return $t(t).isEqual($t(n));\n\n    case 3\n    /* TimestampValue */\n    :\n      return function (t, n) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof n.timestampValue && t.timestampValue.length === n.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === n.timestampValue;\n        var e = Rt(t.timestampValue),\n            r = Rt(n.timestampValue);\n        return e.seconds === r.seconds && e.nanos === r.nanos;\n      }(t, n);\n\n    case 5\n    /* StringValue */\n    :\n      return t.stringValue === n.stringValue;\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, n) {\n        return Vt(t.bytesValue).isEqual(Vt(n.bytesValue));\n      }(t, n);\n\n    case 7\n    /* RefValue */\n    :\n      return t.referenceValue === n.referenceValue;\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, n) {\n        return Pt(t.geoPointValue.latitude) === Pt(n.geoPointValue.latitude) && Pt(t.geoPointValue.longitude) === Pt(n.geoPointValue.longitude);\n      }(t, n);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, n) {\n        if (\"integerValue\" in t && \"integerValue\" in n) return Pt(t.integerValue) === Pt(n.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in n) {\n          var _e3 = Pt(t.doubleValue),\n              r = Pt(n.doubleValue);\n\n          return _e3 === r ? at(_e3) === at(r) : isNaN(_e3) && isNaN(r);\n        }\n\n        return !1;\n      }(t, n);\n\n    case 9\n    /* ArrayValue */\n    :\n      return _t(t.arrayValue.values || [], n.arrayValue.values || [], Ft);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, n) {\n        var e = t.mapValue.fields || {},\n            r = n.mapValue.fields || {};\n        if (bt(e) !== bt(r)) return !1;\n\n        for (var _t4 in e) {\n          if (e.hasOwnProperty(_t4) && (void 0 === r[_t4] || !Ft(e[_t4], r[_t4]))) return !1;\n        }\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, n);\n\n    default:\n      return g();\n  }\n}\n\nfunction xt(t, n) {\n  return void 0 !== (t.values || []).find(function (t) {\n    return Ft(t, n);\n  });\n}\n\nfunction qt(t, n) {\n  if (t === n) return 0;\n  var e = St(t),\n      r = St(n);\n  if (e !== r) return yt(e, r);\n\n  switch (e) {\n    case 0\n    /* NullValue */\n    :\n      return 0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return yt(t.booleanValue, n.booleanValue);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, n) {\n        var e = Pt(t.integerValue || t.doubleValue),\n            r = Pt(n.integerValue || n.doubleValue);\n        return e < r ? -1 : e > r ? 1 : e === r ? 0 : // one or both are NaN.\n        isNaN(e) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, n);\n\n    case 3\n    /* TimestampValue */\n    :\n      return Ot(t.timestampValue, n.timestampValue);\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return Ot($t(t), $t(n));\n\n    case 5\n    /* StringValue */\n    :\n      return yt(t.stringValue, n.stringValue);\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, n) {\n        var e = Vt(t),\n            r = Vt(n);\n        return e.compareTo(r);\n      }(t.bytesValue, n.bytesValue);\n\n    case 7\n    /* RefValue */\n    :\n      return function (t, n) {\n        var e = t.split(\"/\"),\n            r = n.split(\"/\");\n\n        for (var _t5 = 0; _t5 < e.length && _t5 < r.length; _t5++) {\n          var _n5 = yt(e[_t5], r[_t5]);\n\n          if (0 !== _n5) return _n5;\n        }\n\n        return yt(e.length, r.length);\n      }(t.referenceValue, n.referenceValue);\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, n) {\n        var e = yt(Pt(t.latitude), Pt(n.latitude));\n        if (0 !== e) return e;\n        return yt(Pt(t.longitude), Pt(n.longitude));\n      }(t.geoPointValue, n.geoPointValue);\n\n    case 9\n    /* ArrayValue */\n    :\n      return function (t, n) {\n        var e = t.values || [],\n            r = n.values || [];\n\n        for (var _t6 = 0; _t6 < e.length && _t6 < r.length; ++_t6) {\n          var _n6 = qt(e[_t6], r[_t6]);\n\n          if (_n6) return _n6;\n        }\n\n        return yt(e.length, r.length);\n      }(t.arrayValue, n.arrayValue);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, n) {\n        var e = t.fields || {},\n            r = Object.keys(e),\n            s = n.fields || {},\n            i = Object.keys(s); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        r.sort(), i.sort();\n\n        for (var _t7 = 0; _t7 < r.length && _t7 < i.length; ++_t7) {\n          var _n7 = yt(r[_t7], i[_t7]);\n\n          if (0 !== _n7) return _n7;\n          var o = qt(e[r[_t7]], s[i[_t7]]);\n          if (0 !== o) return o;\n        }\n\n        return yt(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */\n      (t.mapValue, n.mapValue);\n\n    default:\n      throw g();\n  }\n}\n\nfunction Ot(t, n) {\n  if (\"string\" == typeof t && \"string\" == typeof n && t.length === n.length) return yt(t, n);\n  var e = Rt(t),\n      r = Rt(n),\n      s = yt(e.seconds, r.seconds);\n  return 0 !== s ? s : yt(e.nanos, r.nanos);\n}\n\nfunction Ct(t, n) {\n  return {\n    referenceValue: \"projects/\".concat(t.projectId, \"/databases/\").concat(t.database, \"/documents/\").concat(n.path.canonicalString())\n  };\n}\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction Lt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction Ut(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction kt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction jt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Mt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    var n = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Et(t.mapValue.fields, function (t, e) {\n      return n.mapValue.fields[t] = Mt(e);\n    }), n;\n  }\n\n  if (t.arrayValue) {\n    var _n8 = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (var e = 0; e < (t.arrayValue.values || []).length; ++e) {\n      _n8.arrayValue.values[e] = Mt(t.arrayValue.values[e]);\n    }\n\n    return _n8;\n  }\n\n  return Object.assign({}, t);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\n\n\nvar Bt = /*#__PURE__*/function () {\n  function Bt(t) {\n    _classCallCheck(this, Bt);\n\n    this.value = t;\n  }\n\n  _createClass(Bt, [{\n    key: \"field\",\n    value:\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */\n    function field(t) {\n      if (t.isEmpty()) return this.value;\n      {\n        var n = this.value;\n\n        for (var e = 0; e < t.length - 1; ++e) {\n          if (n = (n.mapValue.fields || {})[t.get(e)], !jt(n)) return null;\n        }\n\n        return n = (n.mapValue.fields || {})[t.lastSegment()], n || null;\n      }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(t, n) {\n      this.getFieldsMap(t.popLast())[t.lastSegment()] = Mt(n);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */\n\n  }, {\n    key: \"setAll\",\n    value: function setAll(t) {\n      var _this9 = this;\n\n      var n = tt.emptyPath(),\n          e = {},\n          r = [];\n      t.forEach(function (t, s) {\n        if (!n.isImmediateParentOf(s)) {\n          // Insert the accumulated changes at this parent location\n          var _t8 = _this9.getFieldsMap(n);\n\n          _this9.applyChanges(_t8, e, r), e = {}, r = [], n = s.popLast();\n        }\n\n        t ? e[s.lastSegment()] = Mt(t) : r.push(s.lastSegment());\n      });\n      var s = this.getFieldsMap(n);\n      this.applyChanges(s, e, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var n = this.field(t.popLast());\n      jt(n) && n.mapValue.fields && delete n.mapValue.fields[t.lastSegment()];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return Ft(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */\n\n  }, {\n    key: \"getFieldsMap\",\n    value: function getFieldsMap(t) {\n      var n = this.value;\n      n.mapValue.fields || (n.mapValue = {\n        fields: {}\n      });\n\n      for (var e = 0; e < t.length; ++e) {\n        var r = n.mapValue.fields[t.get(e)];\n        jt(r) && r.mapValue.fields || (r = {\n          mapValue: {\n            fields: {}\n          }\n        }, n.mapValue.fields[t.get(e)] = r), n = r;\n      }\n\n      return n.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */\n\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges(t, n, e) {\n      Et(n, function (n, e) {\n        return t[n] = e;\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(e),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _n9 = _step2.value;\n          delete t[_n9];\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Bt(Mt(this.value));\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new Bt({\n        mapValue: {}\n      });\n    }\n  }]);\n\n  return Bt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nvar zt = /*#__PURE__*/function () {\n  function zt(t, n, e, r, s) {\n    _classCallCheck(this, zt);\n\n    this.key = t, this.documentType = n, this.version = e, this.data = r, this.documentState = s;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  _createClass(zt, [{\n    key: \"convertToFoundDocument\",\n    value:\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */\n    function convertToFoundDocument(t, n) {\n      return this.version = t, this.documentType = 1\n      /* FOUND_DOCUMENT */\n      , this.data = n, this.documentState = 0\n      /* SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */\n\n  }, {\n    key: \"convertToNoDocument\",\n    value: function convertToNoDocument(t) {\n      return this.version = t, this.documentType = 2\n      /* NO_DOCUMENT */\n      , this.data = Bt.empty(), this.documentState = 0\n      /* SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"convertToUnknownDocument\",\n    value: function convertToUnknownDocument(t) {\n      return this.version = t, this.documentType = 3\n      /* UNKNOWN_DOCUMENT */\n      , this.data = Bt.empty(), this.documentState = 2\n      /* HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasCommittedMutations\",\n    value: function setHasCommittedMutations() {\n      return this.documentState = 2\n      /* HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasLocalMutations\",\n    value: function setHasLocalMutations() {\n      return this.documentState = 1\n      /* HAS_LOCAL_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"hasLocalMutations\",\n    get: function get() {\n      return 1\n      /* HAS_LOCAL_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasCommittedMutations\",\n    get: function get() {\n      return 2\n      /* HAS_COMMITTED_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n  }, {\n    key: \"isValidDocument\",\n    value: function isValidDocument() {\n      return 0\n      /* INVALID */\n      !== this.documentType;\n    }\n  }, {\n    key: \"isFoundDocument\",\n    value: function isFoundDocument() {\n      return 1\n      /* FOUND_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isNoDocument\",\n    value: function isNoDocument() {\n      return 2\n      /* NO_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isUnknownDocument\",\n    value: function isUnknownDocument() {\n      return 3\n      /* UNKNOWN_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof zt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n  }, {\n    key: \"mutableCopy\",\n    value: function mutableCopy() {\n      return new zt(this.key, this.documentType, this.version, this.data.clone(), this.documentState);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Document(\".concat(this.key, \", \").concat(this.version, \", \").concat(JSON.stringify(this.data.value), \", {documentType: \").concat(this.documentType, \"}), {documentState: \").concat(this.documentState, \"})\");\n    }\n  }], [{\n    key: \"newInvalidDocument\",\n    value: function newInvalidDocument(t) {\n      return new zt(t, 0\n      /* INVALID */\n      , vt.min(), Bt.empty(), 0\n      /* SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */\n\n  }, {\n    key: \"newFoundDocument\",\n    value: function newFoundDocument(t, n, e) {\n      return new zt(t, 1\n      /* FOUND_DOCUMENT */\n      , n, e, 0\n      /* SYNCED */\n      );\n    }\n    /** Creates a new document that is known to not exist at the given version. */\n\n  }, {\n    key: \"newNoDocument\",\n    value: function newNoDocument(t, n) {\n      return new zt(t, 2\n      /* NO_DOCUMENT */\n      , n, Bt.empty(), 0\n      /* SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"newUnknownDocument\",\n    value: function newUnknownDocument(t, n) {\n      return new zt(t, 3\n      /* UNKNOWN_DOCUMENT */\n      , n, Bt.empty(), 2\n      /* HAS_COMMITTED_MUTATIONS */\n      );\n    }\n  }]);\n\n  return zt;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nvar Gt = /*#__PURE__*/_createClass(function Gt(t) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n  _classCallCheck(this, Gt);\n\n  this.path = t, this.collectionGroup = n, this.orderBy = e, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.P = null;\n});\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction Qt(t) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new Gt(t, n, e, r, s, i, o);\n}\n\nvar Wt = /*#__PURE__*/function (_ref2) {\n  _inherits(Wt, _ref2);\n\n  var _super5 = _createSuper(Wt);\n\n  function Wt(t, n, e) {\n    var _this10;\n\n    _classCallCheck(this, Wt);\n\n    _this10 = _super5.call(this), _this10.field = t, _this10.op = n, _this10.value = e;\n    return _this10;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  _createClass(Wt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var n = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n      return \"!=\"\n      /* NOT_EQUAL */\n      === this.op ? null !== n && this.D(qt(n, this.value)) : null !== n && St(this.value) === St(n) && this.D(qt(n, this.value)); // Only compare types with matching backend order (such as double and int).\n    }\n  }, {\n    key: \"D\",\n    value: function D(t) {\n      switch (this.op) {\n        case \"<\"\n        /* LESS_THAN */\n        :\n          return t < 0;\n\n        case \"<=\"\n        /* LESS_THAN_OR_EQUAL */\n        :\n          return t <= 0;\n\n        case \"==\"\n        /* EQUAL */\n        :\n          return 0 === t;\n\n        case \"!=\"\n        /* NOT_EQUAL */\n        :\n          return 0 !== t;\n\n        case \">\"\n        /* GREATER_THAN */\n        :\n          return t > 0;\n\n        case \">=\"\n        /* GREATER_THAN_OR_EQUAL */\n        :\n          return t >= 0;\n\n        default:\n          return g();\n      }\n    }\n  }, {\n    key: \"N\",\n    value: function N() {\n      return [\"<\"\n      /* LESS_THAN */\n      , \"<=\"\n      /* LESS_THAN_OR_EQUAL */\n      , \">\"\n      /* GREATER_THAN */\n      , \">=\"\n      /* GREATER_THAN_OR_EQUAL */\n      , \"!=\"\n      /* NOT_EQUAL */\n      , \"not-in\"\n      /* NOT_IN */\n      ].indexOf(this.op) >= 0;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, n, e) {\n      return t.isKeyField() ? \"in\"\n      /* IN */\n      === n || \"not-in\"\n      /* NOT_IN */\n      === n ? this.V(t, n, e) : new Yt(t, n, e) : \"array-contains\"\n      /* ARRAY_CONTAINS */\n      === n ? new Xt(t, e) : \"in\"\n      /* IN */\n      === n ? new Zt(t, e) : \"not-in\"\n      /* NOT_IN */\n      === n ? new tn(t, e) : \"array-contains-any\"\n      /* ARRAY_CONTAINS_ANY */\n      === n ? new nn(t, e) : new Wt(t, n, e);\n    }\n  }, {\n    key: \"V\",\n    value: function V(t, n, e) {\n      return \"in\"\n      /* IN */\n      === n ? new Ht(t, e) : new Kt(t, e);\n    }\n  }]);\n\n  return Wt;\n}( /*#__PURE__*/function () {\n  function _class2() {\n    _classCallCheck(this, _class2);\n  }\n\n  return _createClass(_class2);\n}());\n/** Filter that matches on key fields (i.e. '__name__'). */\n\n\nvar Yt = /*#__PURE__*/function (_Wt) {\n  _inherits(Yt, _Wt);\n\n  var _super6 = _createSuper(Yt);\n\n  function Yt(t, n, e) {\n    var _this11;\n\n    _classCallCheck(this, Yt);\n\n    _this11 = _super6.call(this, t, n, e), _this11.key = nt.fromName(e.referenceValue);\n    return _this11;\n  }\n\n  _createClass(Yt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var n = nt.comparator(t.key, this.key);\n      return this.D(n);\n    }\n  }]);\n\n  return Yt;\n}(Wt);\n/** Filter that matches on key fields within an array. */\n\n\nvar Ht = /*#__PURE__*/function (_Wt2) {\n  _inherits(Ht, _Wt2);\n\n  var _super7 = _createSuper(Ht);\n\n  function Ht(t, n) {\n    var _this12;\n\n    _classCallCheck(this, Ht);\n\n    _this12 = _super7.call(this, t, \"in\"\n    /* IN */\n    , n), _this12.keys = Jt(\"in\"\n    /* IN */\n    , n);\n    return _this12;\n  }\n\n  _createClass(Ht, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return this.keys.some(function (n) {\n        return n.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return Ht;\n}(Wt);\n/** Filter that matches on key fields not present within an array. */\n\n\nvar Kt = /*#__PURE__*/function (_Wt3) {\n  _inherits(Kt, _Wt3);\n\n  var _super8 = _createSuper(Kt);\n\n  function Kt(t, n) {\n    var _this13;\n\n    _classCallCheck(this, Kt);\n\n    _this13 = _super8.call(this, t, \"not-in\"\n    /* NOT_IN */\n    , n), _this13.keys = Jt(\"not-in\"\n    /* NOT_IN */\n    , n);\n    return _this13;\n  }\n\n  _createClass(Kt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return !this.keys.some(function (n) {\n        return n.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return Kt;\n}(Wt);\n\nfunction Jt(t, n) {\n  var e;\n  return ((null === (e = n.arrayValue) || void 0 === e ? void 0 : e.values) || []).map(function (t) {\n    return nt.fromName(t.referenceValue);\n  });\n}\n/** A Filter that implements the array-contains operator. */\n\n\nvar Xt = /*#__PURE__*/function (_Wt4) {\n  _inherits(Xt, _Wt4);\n\n  var _super9 = _createSuper(Xt);\n\n  function Xt(t, n) {\n    _classCallCheck(this, Xt);\n\n    return _super9.call(this, t, \"array-contains\"\n    /* ARRAY_CONTAINS */\n    , n);\n  }\n\n  _createClass(Xt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var n = t.data.field(this.field);\n      return Lt(n) && xt(n.arrayValue, this.value);\n    }\n  }]);\n\n  return Xt;\n}(Wt);\n/** A Filter that implements the IN operator. */\n\n\nvar Zt = /*#__PURE__*/function (_Wt5) {\n  _inherits(Zt, _Wt5);\n\n  var _super10 = _createSuper(Zt);\n\n  function Zt(t, n) {\n    _classCallCheck(this, Zt);\n\n    return _super10.call(this, t, \"in\"\n    /* IN */\n    , n);\n  }\n\n  _createClass(Zt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var n = t.data.field(this.field);\n      return null !== n && xt(this.value.arrayValue, n);\n    }\n  }]);\n\n  return Zt;\n}(Wt);\n/** A Filter that implements the not-in operator. */\n\n\nvar tn = /*#__PURE__*/function (_Wt6) {\n  _inherits(tn, _Wt6);\n\n  var _super11 = _createSuper(tn);\n\n  function tn(t, n) {\n    _classCallCheck(this, tn);\n\n    return _super11.call(this, t, \"not-in\"\n    /* NOT_IN */\n    , n);\n  }\n\n  _createClass(tn, [{\n    key: \"matches\",\n    value: function matches(t) {\n      if (xt(this.value.arrayValue, {\n        nullValue: \"NULL_VALUE\"\n      })) return !1;\n      var n = t.data.field(this.field);\n      return null !== n && !xt(this.value.arrayValue, n);\n    }\n  }]);\n\n  return tn;\n}(Wt);\n/** A Filter that implements the array-contains-any operator. */\n\n\nvar nn = /*#__PURE__*/function (_Wt7) {\n  _inherits(nn, _Wt7);\n\n  var _super12 = _createSuper(nn);\n\n  function nn(t, n) {\n    _classCallCheck(this, nn);\n\n    return _super12.call(this, t, \"array-contains-any\"\n    /* ARRAY_CONTAINS_ANY */\n    , n);\n  }\n\n  _createClass(nn, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var _this14 = this;\n\n      var n = t.data.field(this.field);\n      return !(!Lt(n) || !n.arrayValue.values) && n.arrayValue.values.some(function (t) {\n        return xt(_this14.value.arrayValue, t);\n      });\n    }\n  }]);\n\n  return nn;\n}(Wt);\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\n\n\nvar en = /*#__PURE__*/_createClass(function en(t, n) {\n  _classCallCheck(this, en);\n\n  this.position = t, this.before = n;\n});\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nvar rn = /*#__PURE__*/_createClass(function rn(t) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n\n  _classCallCheck(this, rn);\n\n  this.field = t, this.dir = n;\n});\n\nfunction sn(t, n) {\n  return t.dir === n.dir && t.field.isEqual(n.field);\n}\n\nfunction on(t, n) {\n  if (null === t) return null === n;\n  if (null === n) return !1;\n  if (t.before !== n.before || t.position.length !== n.position.length) return !1;\n\n  for (var e = 0; e < t.position.length; e++) {\n    if (!Ft(t.position[e], n.position[e])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nvar un = /*#__PURE__*/_createClass(\n/**\n * Initializes a Query with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n */\nfunction un(t) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n\n  _classCallCheck(this, un);\n\n  this.path = t, this.collectionGroup = n, this.explicitOrderBy = e, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.$ = null, // The corresponding `Target` of this `Query` instance.\n  this.S = null, this.startAt, this.endAt;\n});\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction cn(t) {\n  return !ct(t.limit) && \"L\"\n  /* Last */\n  === t.limitType;\n}\n\nfunction an(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction hn(t) {\n  var _iterator3 = _createForOfIteratorHelper(t.filters),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var n = _step3.value;\n      if (n.N()) return n.field;\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return null;\n}\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction ln(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction fn(t) {\n  var n = b(t);\n\n  if (null === n.$) {\n    n.$ = [];\n\n    var _t9 = hn(n),\n        e = an(n);\n\n    if (null !== _t9 && null === e) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      _t9.isKeyField() || n.$.push(new rn(_t9)), n.$.push(new rn(tt.keyField(), \"asc\"\n      /* ASCENDING */\n      ));else {\n      var _t10 = !1;\n\n      var _iterator4 = _createForOfIteratorHelper(n.explicitOrderBy),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _e4 = _step4.value;\n          n.$.push(_e4), _e4.field.isKeyField() && (_t10 = !0);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (!_t10) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        var _t11 = n.explicitOrderBy.length > 0 ? n.explicitOrderBy[n.explicitOrderBy.length - 1].dir : \"asc\"\n        /* ASCENDING */\n        ;\n\n        n.$.push(new rn(tt.keyField(), _t11));\n      }\n    }\n  }\n\n  return n.$;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction dn(t) {\n  var n = b(t);\n  if (!n.S) if (\"F\"\n  /* First */\n  === n.limitType) n.S = Qt(n.path, n.collectionGroup, fn(n), n.filters, n.limit, n.startAt, n.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    var _t12 = [];\n\n    var _iterator5 = _createForOfIteratorHelper(fn(n)),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _e5 = _step5.value;\n\n        var _n10 = \"desc\"\n        /* DESCENDING */\n        === _e5.dir ? \"asc\"\n        /* ASCENDING */\n        : \"desc\"\n        /* DESCENDING */\n        ;\n\n        _t12.push(new rn(_e5.field, _n10));\n      } // We need to swap the cursors to match the now-flipped query ordering.\n\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    var e = n.endAt ? new en(n.endAt.position, !n.endAt.before) : null,\n        r = n.startAt ? new en(n.startAt.position, !n.startAt.before) : null; // Now return as a LimitType.First query.\n\n    n.S = Qt(n.path, n.collectionGroup, _t12, n.filters, n.limit, e, r);\n  }\n  return n.S;\n}\n\nfunction wn(t, n) {\n  return function (t, n) {\n    if (t.limit !== n.limit) return !1;\n    if (t.orderBy.length !== n.orderBy.length) return !1;\n\n    for (var _e6 = 0; _e6 < t.orderBy.length; _e6++) {\n      if (!sn(t.orderBy[_e6], n.orderBy[_e6])) return !1;\n    }\n\n    if (t.filters.length !== n.filters.length) return !1;\n\n    for (var s = 0; s < t.filters.length; s++) {\n      if (e = t.filters[s], r = n.filters[s], e.op !== r.op || !e.field.isEqual(r.field) || !Ft(e.value, r.value)) return !1;\n    }\n\n    var e, r;\n    return t.collectionGroup === n.collectionGroup && !!t.path.isEqual(n.path) && !!on(t.startAt, n.startAt) && on(t.endAt, n.endAt);\n  }(dn(t), dn(n)) && t.limitType === n.limitType;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction mn(t, n) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(n) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(n) : function (t, n) {\n    if (t.F) {\n      if (isNaN(n)) return {\n        doubleValue: \"NaN\"\n      };\n      if (n === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (n === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n\n    return {\n      doubleValue: at(n) ? \"-0\" : n\n    };\n  }(t, n);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nvar pn = /*#__PURE__*/_createClass(function pn() {\n  _classCallCheck(this, pn);\n\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  this._ = void 0;\n});\n/** Transforms a value into a server-generated timestamp. */\n\n\nvar yn = /*#__PURE__*/function (_pn) {\n  _inherits(yn, _pn);\n\n  var _super13 = _createSuper(yn);\n\n  function yn() {\n    _classCallCheck(this, yn);\n\n    return _super13.apply(this, arguments);\n  }\n\n  return _createClass(yn);\n}(pn);\n/** Transforms an array value via a union operation. */\n\n\nvar _n = /*#__PURE__*/function (_pn2) {\n  _inherits(_n, _pn2);\n\n  var _super14 = _createSuper(_n);\n\n  function _n(t) {\n    var _this15;\n\n    _classCallCheck(this, _n);\n\n    _this15 = _super14.call(this), _this15.elements = t;\n    return _this15;\n  }\n\n  return _createClass(_n);\n}(pn);\n/** Transforms an array value via a remove operation. */\n\n\nvar gn = /*#__PURE__*/function (_pn3) {\n  _inherits(gn, _pn3);\n\n  var _super15 = _createSuper(gn);\n\n  function gn(t) {\n    var _this16;\n\n    _classCallCheck(this, gn);\n\n    _this16 = _super15.call(this), _this16.elements = t;\n    return _this16;\n  }\n\n  return _createClass(gn);\n}(pn);\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nvar vn = /*#__PURE__*/function (_pn4) {\n  _inherits(vn, _pn4);\n\n  var _super16 = _createSuper(vn);\n\n  function vn(t, n) {\n    var _this17;\n\n    _classCallCheck(this, vn);\n\n    _this17 = _super16.call(this), _this17.q = t, _this17.O = n;\n    return _this17;\n  }\n\n  return _createClass(vn);\n}(pn);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nvar bn = /*#__PURE__*/_createClass(function bn(t, n) {\n  _classCallCheck(this, bn);\n\n  this.field = t, this.transform = n;\n});\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nvar En = /*#__PURE__*/function () {\n  function En(t, n) {\n    _classCallCheck(this, En);\n\n    this.updateTime = t, this.exists = n;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  _createClass(En, [{\n    key: \"isNone\",\n    get:\n    /** Returns whether this Precondition is empty. */\n    function get() {\n      return void 0 === this.updateTime && void 0 === this.exists;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n  }], [{\n    key: \"none\",\n    value: function none() {\n      return new En();\n    }\n    /** Creates a new Precondition with an exists flag. */\n\n  }, {\n    key: \"exists\",\n    value: function exists(t) {\n      return new En(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */\n\n  }, {\n    key: \"updateTime\",\n    value: function updateTime(t) {\n      return new En(t);\n    }\n  }]);\n\n  return En;\n}();\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nvar Tn = /*#__PURE__*/_createClass(function Tn() {\n  _classCallCheck(this, Tn);\n});\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nvar In = /*#__PURE__*/function (_Tn) {\n  _inherits(In, _Tn);\n\n  var _super17 = _createSuper(In);\n\n  function In(t, n, e) {\n    var _this18;\n\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    _classCallCheck(this, In);\n\n    _this18 = _super17.call(this), _this18.key = t, _this18.value = n, _this18.precondition = e, _this18.fieldTransforms = r, _this18.type = 0\n    /* Set */\n    ;\n    return _this18;\n  }\n\n  return _createClass(In);\n}(Tn);\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\n\n\nvar An = /*#__PURE__*/function (_Tn2) {\n  _inherits(An, _Tn2);\n\n  var _super18 = _createSuper(An);\n\n  function An(t, n, e, r) {\n    var _this19;\n\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n    _classCallCheck(this, An);\n\n    _this19 = _super18.call(this), _this19.key = t, _this19.data = n, _this19.fieldMask = e, _this19.precondition = r, _this19.fieldTransforms = s, _this19.type = 1\n    /* Patch */\n    ;\n    return _this19;\n  }\n\n  return _createClass(An);\n}(Tn);\n/** A mutation that deletes the document at the given key. */\n\n\nvar Rn = /*#__PURE__*/function (_Tn3) {\n  _inherits(Rn, _Tn3);\n\n  var _super19 = _createSuper(Rn);\n\n  function Rn(t, n) {\n    var _this20;\n\n    _classCallCheck(this, Rn);\n\n    _this20 = _super19.call(this), _this20.key = t, _this20.precondition = n, _this20.type = 2\n    /* Delete */\n    , _this20.fieldTransforms = [];\n    return _this20;\n  }\n\n  return _createClass(Rn);\n}(Tn);\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\n\n\nvar Pn = /*#__PURE__*/function (_Tn4) {\n  _inherits(Pn, _Tn4);\n\n  var _super20 = _createSuper(Pn);\n\n  function Pn(t, n) {\n    var _this21;\n\n    _classCallCheck(this, Pn);\n\n    _this21 = _super20.call(this), _this21.key = t, _this21.precondition = n, _this21.type = 3\n    /* Verify */\n    , _this21.fieldTransforms = [];\n    return _this21;\n  }\n\n  return _createClass(Pn);\n}(Tn);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Vn = function () {\n  var t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n}(),\n    Dn = function () {\n  var t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n}();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nvar Nn = /*#__PURE__*/_createClass(function Nn(t, n) {\n  _classCallCheck(this, Nn);\n\n  this.databaseId = t, this.F = n;\n});\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction $n(t, n) {\n  if (t.F) {\n    return \"\".concat(new Date(1e3 * n.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\"), \".\").concat((\"000000000\" + n.nanoseconds).slice(-9), \"Z\");\n  }\n\n  return {\n    seconds: \"\" + n.seconds,\n    nanos: n.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction Sn(t, n) {\n  return t.F ? n.toBase64() : n.toUint8Array();\n}\n\nfunction Fn(t, n) {\n  return $n(t, n.toTimestamp());\n}\n\nfunction xn(t) {\n  return v(!!t), vt.fromTimestamp(function (t) {\n    var n = Rt(t);\n    return new gt(n.seconds, n.nanos);\n  }(t));\n}\n\nfunction qn(t, n) {\n  return function (t) {\n    return new X([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(n).canonicalString();\n}\n\nfunction On(t, n) {\n  return qn(t.databaseId, n.path);\n}\n\nfunction Cn(t, n) {\n  var e = function (t) {\n    var n = X.fromString(t);\n    return v(Hn(n)), n;\n  }(n);\n\n  if (e.get(1) !== t.databaseId.projectId) throw new U(A, \"Tried to deserialize key from different project: \" + e.get(1) + \" vs \" + t.databaseId.projectId);\n  if (e.get(3) !== t.databaseId.database) throw new U(A, \"Tried to deserialize key from different database: \" + e.get(3) + \" vs \" + t.databaseId.database);\n  return new nt((v((r = e).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction Ln(t, n) {\n  return qn(t.databaseId, n);\n}\n\nfunction Un(t) {\n  return new X([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction kn(t, n, e) {\n  return {\n    name: On(t, n),\n    fields: e.value.mapValue.fields\n  };\n}\n\nfunction jn(t, n) {\n  return \"found\" in n ? function (t, n) {\n    v(!!n.found), n.found.name, n.found.updateTime;\n    var e = Cn(t, n.found.name),\n        r = xn(n.found.updateTime),\n        s = new Bt({\n      mapValue: {\n        fields: n.found.fields\n      }\n    });\n    return zt.newFoundDocument(e, r, s);\n  }(t, n) : \"missing\" in n ? function (t, n) {\n    v(!!n.missing), v(!!n.readTime);\n    var e = Cn(t, n.missing),\n        r = xn(n.readTime);\n    return zt.newNoDocument(e, r);\n  }(t, n) : g();\n}\n\nfunction Mn(t, n) {\n  var e;\n  if (n instanceof In) e = {\n    update: kn(t, n.key, n.value)\n  };else if (n instanceof Rn) e = {\n    delete: On(t, n.key)\n  };else if (n instanceof An) e = {\n    update: kn(t, n.key, n.data),\n    updateMask: Yn(n.fieldMask)\n  };else {\n    if (!(n instanceof Pn)) return g();\n    e = {\n      verify: On(t, n.key)\n    };\n  }\n  return n.fieldTransforms.length > 0 && (e.updateTransforms = n.fieldTransforms.map(function (t) {\n    return function (t, n) {\n      var e = n.transform;\n      if (e instanceof yn) return {\n        fieldPath: n.field.canonicalString(),\n        setToServerValue: \"REQUEST_TIME\"\n      };\n      if (e instanceof _n) return {\n        fieldPath: n.field.canonicalString(),\n        appendMissingElements: {\n          values: e.elements\n        }\n      };\n      if (e instanceof gn) return {\n        fieldPath: n.field.canonicalString(),\n        removeAllFromArray: {\n          values: e.elements\n        }\n      };\n      if (e instanceof vn) return {\n        fieldPath: n.field.canonicalString(),\n        increment: e.O\n      };\n      throw g();\n    }(0, t);\n  })), n.precondition.isNone || (e.currentDocument = function (t, n) {\n    return void 0 !== n.updateTime ? {\n      updateTime: Fn(t, n.updateTime)\n    } : void 0 !== n.exists ? {\n      exists: n.exists\n    } : g();\n  }(t, n.precondition)), e;\n}\n\nfunction Bn(t, n) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  var e = {\n    structuredQuery: {}\n  },\n      r = n.path;\n  null !== n.collectionGroup ? (e.parent = Ln(t, r), e.structuredQuery.from = [{\n    collectionId: n.collectionGroup,\n    allDescendants: !0\n  }]) : (e.parent = Ln(t, r.popLast()), e.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n\n  var s = function (t) {\n    if (0 === t.length) return;\n    var n = t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          if (\"==\"\n          /* EQUAL */\n          === t.op) {\n            if (kt(t.value)) return {\n              unaryFilter: {\n                field: Wn(t.field),\n                op: \"IS_NAN\"\n              }\n            };\n            if (Ut(t.value)) return {\n              unaryFilter: {\n                field: Wn(t.field),\n                op: \"IS_NULL\"\n              }\n            };\n          } else if (\"!=\"\n          /* NOT_EQUAL */\n          === t.op) {\n            if (kt(t.value)) return {\n              unaryFilter: {\n                field: Wn(t.field),\n                op: \"IS_NOT_NAN\"\n              }\n            };\n            if (Ut(t.value)) return {\n              unaryFilter: {\n                field: Wn(t.field),\n                op: \"IS_NOT_NULL\"\n              }\n            };\n          }\n\n          return {\n            fieldFilter: {\n              field: Wn(t.field),\n              op: Qn(t.op),\n              value: t.value\n            }\n          };\n        }(t)\n      );\n    });\n    if (1 === n.length) return n[0];\n    return {\n      compositeFilter: {\n        op: \"AND\",\n        filters: n\n      }\n    };\n  }(n.filters);\n\n  s && (e.structuredQuery.where = s);\n\n  var i = function (t) {\n    if (0 === t.length) return;\n    return t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          return {\n            field: Wn(t.field),\n            direction: Gn(t.dir)\n          };\n        }(t)\n      );\n    });\n  }(n.orderBy);\n\n  i && (e.structuredQuery.orderBy = i);\n\n  var o = function (t, n) {\n    return t.F || ct(n) ? n : {\n      value: n\n    };\n  }(t, n.limit);\n\n  return null !== o && (e.structuredQuery.limit = o), n.startAt && (e.structuredQuery.startAt = zn(n.startAt)), n.endAt && (e.structuredQuery.endAt = zn(n.endAt)), e;\n}\n\nfunction zn(t) {\n  return {\n    before: t.before,\n    values: t.position\n  };\n} // visible for testing\n\n\nfunction Gn(t) {\n  return Vn[t];\n} // visible for testing\n\n\nfunction Qn(t) {\n  return Dn[t];\n}\n\nfunction Wn(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction Yn(t) {\n  var n = [];\n  return t.fields.forEach(function (t) {\n    return n.push(t.canonicalString());\n  }), {\n    fieldPaths: n\n  };\n}\n\nfunction Hn(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction Kn(t) {\n  return new Nn(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nvar Jn = /*#__PURE__*/function () {\n  function Jn(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  n) {\n    var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n\n    _classCallCheck(this, Jn);\n\n    this.C = t, this.timerId = n, this.L = e, this.U = r, this.k = s, this.j = 0, this.M = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.B = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  _createClass(Jn, [{\n    key: \"reset\",\n    value: function reset() {\n      this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n\n  }, {\n    key: \"G\",\n    value: function G() {\n      this.j = this.k;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n\n  }, {\n    key: \"W\",\n    value: function W(t) {\n      var _this22 = this;\n\n      // Cancel any pending backoff operation.\n      this.cancel(); // First schedule using the current base (which may be 0 and should be\n      // honored as such).\n\n      var n = Math.floor(this.j + this.Y()),\n          e = Math.max(0, Date.now() - this.B),\n          r = Math.max(0, n - e); // Guard against lastAttemptTime being in the future due to a clock change.\n\n      r > 0 && _m(\"ExponentialBackoff\", \"Backing off for \".concat(r, \" ms (base delay: \").concat(this.j, \" ms, delay with jitter: \").concat(n, \" ms, last attempt: \").concat(e, \" ms ago)\")), this.M = this.C.enqueueAfterDelay(this.timerId, r, function () {\n        return _this22.B = Date.now(), t();\n      }), // Apply backoff factor to determine next delay and ensure it is within\n      // bounds.\n      this.j *= this.U, this.j < this.L && (this.j = this.L), this.j > this.k && (this.j = this.k);\n    }\n  }, {\n    key: \"H\",\n    value: function H() {\n      null !== this.M && (this.M.skipDelay(), this.M = null);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      null !== this.M && (this.M.cancel(), this.M = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n  }, {\n    key: \"Y\",\n    value: function Y() {\n      return (Math.random() - .5) * this.j;\n    }\n  }]);\n\n  return Jn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nvar Xn = /*#__PURE__*/function (_ref3) {\n  _inherits(Xn, _ref3);\n\n  var _super21 = _createSuper(Xn);\n\n  function Xn(t, n, e, r) {\n    var _this23;\n\n    _classCallCheck(this, Xn);\n\n    _this23 = _super21.call(this), _this23.authCredentials = t, _this23.appCheckCredentials = n, _this23.K = e, _this23.q = r, _this23.J = !1;\n    return _this23;\n  }\n\n  _createClass(Xn, [{\n    key: \"X\",\n    value: function X() {\n      if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */\n\n  }, {\n    key: \"m\",\n    value: function m(t, n, e) {\n      var _this24 = this;\n\n      return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n            r = _ref5[0],\n            s = _ref5[1];\n\n        return _this24.K.m(t, n, e, r, s);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === N && (_this24.authCredentials.invalidateToken(), _this24.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n      });\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n\n  }, {\n    key: \"T\",\n    value: function T(t, n, e) {\n      var _this25 = this;\n\n      return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            r = _ref7[0],\n            s = _ref7[1];\n\n        return _this25.K.T(t, n, e, r, s);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === N && (_this25.authCredentials.invalidateToken(), _this25.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n      });\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      this.J = !0;\n    }\n  }]);\n\n  return Xn;\n}( /*#__PURE__*/function () {\n  function _class3() {\n    _classCallCheck(this, _class3);\n  }\n\n  return _createClass(_class3);\n}()); // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n\nfunction Zn(_x5, _x6) {\n  return _Zn.apply(this, arguments);\n}\n\nfunction _Zn() {\n  _Zn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(t, n) {\n    var e, r, s;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            e = b(t), r = Un(e.q) + \"/documents\", s = {\n              writes: n.map(function (t) {\n                return Mn(e.q, t);\n              })\n            };\n            _context7.next = 3;\n            return e.m(\"Commit\", r, s);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _Zn.apply(this, arguments);\n}\n\nfunction te(_x7, _x8) {\n  return _te.apply(this, arguments);\n}\n\nfunction _te() {\n  _te = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(t, n) {\n    var e, r, s, i, o, u;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            e = b(t);\n            r = Un(e.q) + \"/documents\";\n            s = {\n              documents: n.map(function (t) {\n                return On(e.q, t);\n              })\n            };\n            _context8.next = 5;\n            return e.T(\"BatchGetDocuments\", r, s);\n\n          case 5:\n            i = _context8.sent;\n            o = new Map();\n            i.forEach(function (t) {\n              var n = jn(e.q, t);\n              o.set(n.key.toString(), n);\n            });\n            u = [];\n            return _context8.abrupt(\"return\", (n.forEach(function (t) {\n              var n = o.get(t.toString());\n              v(!!n), u.push(n);\n            }), u));\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _te.apply(this, arguments);\n}\n\nfunction ne(_x9, _x10) {\n  return _ne.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _ne() {\n  _ne = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(t, n) {\n    var e, r;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            e = b(t), r = Bn(e.q, dn(n));\n            _context9.next = 3;\n            return e.T(\"RunQuery\", r.parent, {\n              structuredQuery: r.structuredQuery\n            });\n\n          case 3:\n            return _context9.abrupt(\"return\", _context9.sent.filter(function (t) {\n              return !!t.document;\n            }).map(function (t) {\n              return function (t, n, e) {\n                var r = Cn(t, n.name),\n                    s = xn(n.updateTime),\n                    i = new Bt({\n                  mapValue: {\n                    fields: n.fields\n                  }\n                }),\n                    o = zt.newFoundDocument(r, s, i);\n                return e && o.setHasCommittedMutations(), e ? o.setHasCommittedMutations() : o;\n              }(e.q, t.document, void 0);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _ne.apply(this, arguments);\n}\n\nvar ee = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\n\nfunction re(t) {\n  if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n\n  if (!ee.has(t)) {\n    _m(\"ComponentProvider\", \"Initializing Datastore\");\n\n    var i = function (t) {\n      return new wt(t, fetch.bind(null));\n    }((n = t._databaseId, e = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new H(n, e, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n        o = Kn(t._databaseId),\n        u = function (t, n, e, r) {\n      return new Xn(t, n, e, r);\n    }(t._authCredentials, t._appCheckCredentials, i, o);\n\n    ee.set(t, u);\n  }\n\n  var n, e, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  return ee.get(t);\n}\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nvar se = /*#__PURE__*/function () {\n  function se(t) {\n    _classCallCheck(this, se);\n\n    var n;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new U(A, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (n = t.ssl) || void 0 === n || n;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(A, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, n, e, r) {\n      if (!0 === n && !0 === r) throw new U(A, \"\".concat(t, \" and \").concat(e, \" cannot be used together.\"));\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n\n  _createClass(se, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n  }]);\n\n  return se;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\n\n\nvar ie = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function ie(t, n, e) {\n    _classCallCheck(this, ie);\n\n    this._authCredentials = n, this._appCheckCredentials = e,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new se({}), this._settingsFrozen = !1, t instanceof K ? this._databaseId = t : (this._app = t, this._databaseId = function (t) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new U(A, '\"projectId\" not provided in firebase.initializeApp.');\n      return new K(t.options.projectId);\n    }\n    /**\n    * Initializes a new instance of Cloud Firestore with the provided settings.\n    * Can only be called before any other functions, including\n    * {@link getFirestore}. If the custom settings are empty, this function is\n    * equivalent to calling {@link getFirestore}.\n    *\n    * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n    * be associated.\n    * @param settings - A settings object to configure the `Firestore` instance.\n    * @returns A newly initialized `Firestore` instance.\n    */\n    (t));\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  _createClass(ie, [{\n    key: \"app\",\n    get: function get() {\n      if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n      return this._app;\n    }\n  }, {\n    key: \"_initialized\",\n    get: function get() {\n      return this._settingsFrozen;\n    }\n  }, {\n    key: \"_terminated\",\n    get: function get() {\n      return void 0 !== this._terminateTask;\n    }\n  }, {\n    key: \"_setSettings\",\n    value: function _setSettings(t) {\n      if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n      this._settings = new se(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n        if (!t) return new M();\n\n        switch (t.type) {\n          case \"gapi\":\n            var n = t.client; // Make sure this really is a Gapi client.\n\n            return v(!(\"object\" != typeof n || null === n || !n.auth || !n.auth.getAuthHeaderValueForFirstParty)), new Q(n, t.sessionIndex || \"0\", t.iamToken || null);\n\n          case \"provider\":\n            return t.client;\n\n          default:\n            throw new U(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n        }\n      }(t.credentials));\n    }\n  }, {\n    key: \"_getSettings\",\n    value: function _getSettings() {\n      return this._settings;\n    }\n  }, {\n    key: \"_freezeSettings\",\n    value: function _freezeSettings() {\n      return this._settingsFrozen = !0, this._settings;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        app: this._app,\n        databaseId: this._databaseId,\n        settings: this._settings\n      };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n\n  }, {\n    key: \"_terminate\",\n    value: function _terminate() {\n      return function (t) {\n        var n = ee.get(t);\n        n && (_m(\"ComponentProvider\", \"Removing Datastore\"), ee.delete(t), n.terminate());\n      }(this), Promise.resolve();\n    }\n  }]);\n\n  return ie;\n}();\n\nfunction oe(t, n) {\n  var e = _getProvider(t, \"firestore/lite\");\n\n  if (e.isInitialized()) throw new U(S, \"Firestore can only be initialized once per app.\");\n  return e.initialize({\n    options: n\n  });\n}\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */\n\n\nfunction ue() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  return _getProvider(n, \"firestore/lite\").getImmediate();\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\n\n\nfunction ce(t, n, e) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n\n  var i = (t = ot(t, ie))._getSettings();\n\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== n && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: \"\".concat(n, \":\").concat(e),\n    ssl: !1\n  })), r.mockUserToken) {\n    var _n11, _e7;\n\n    if (\"string\" == typeof r.mockUserToken) _n11 = r.mockUserToken, _e7 = l.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      _n11 = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n\n      var _i2 = r.mockUserToken.sub || r.mockUserToken.user_id;\n\n      if (!_i2) throw new U(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      _e7 = new l(_i2);\n    }\n    t._authCredentials = new B(new j(_n11, _e7));\n  }\n}\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction ae(t) {\n  return t = ot(t, ie), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nvar he = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function he(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  n, e) {\n    _classCallCheck(this, he);\n\n    this.converter = n, this._key = e,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  _createClass(he, [{\n    key: \"_path\",\n    get: function get() {\n      return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return new fe(this.firestore, this.converter, this._key.path.popLast());\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new he(this.firestore, t, this._key);\n    }\n  }]);\n\n  return he;\n}();\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nvar le = /*#__PURE__*/function () {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  function le(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  n, e) {\n    _classCallCheck(this, le);\n\n    this.converter = n, this._query = e,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  _createClass(le, [{\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new le(this.firestore, t, this._query);\n    }\n  }]);\n\n  return le;\n}();\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\n\n\nvar fe = /*#__PURE__*/function (_le) {\n  _inherits(fe, _le);\n\n  var _super22 = _createSuper(fe);\n\n  /** @hideconstructor */\n  function fe(t, n, e) {\n    var _this26;\n\n    _classCallCheck(this, fe);\n\n    _this26 = _super22.call(this, t, n, new un(e)), _this26._path = e,\n    /** The type of this Firestore reference. */\n    _this26.type = \"collection\";\n    return _this26;\n  }\n  /** The collection's identifier. */\n\n\n  _createClass(fe, [{\n    key: \"id\",\n    get: function get() {\n      return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var t = this._path.popLast();\n\n      return t.isEmpty() ? null : new he(this.firestore,\n      /* converter= */\n      null, new nt(t));\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new fe(this.firestore, t, this._path);\n    }\n  }]);\n\n  return fe;\n}(le);\n\nfunction de(t, n) {\n  for (var _len5 = arguments.length, e = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    e[_key5 - 2] = arguments[_key5];\n  }\n\n  if (t = getModularInstance(t), et(\"collection\", \"path\", n), t instanceof ie) {\n    var r = X.fromString.apply(X, [n].concat(e));\n    return st(r), new fe(t,\n    /* converter= */\n    null, r);\n  }\n\n  {\n    if (!(t instanceof he || t instanceof fe)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r2 = t._path.child(X.fromString.apply(X, [n].concat(e)));\n\n    return st(_r2), new fe(t.firestore,\n    /* converter= */\n    null, _r2);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction we(t, n) {\n  if (t = ot(t, ie), et(\"collectionGroup\", \"collection id\", n), n.indexOf(\"/\") >= 0) throw new U(A, \"Invalid collection ID '\".concat(n, \"' passed to function collectionGroup(). Collection IDs must not contain '/'.\"));\n  return new le(t,\n  /* converter= */\n  null,\n  /**\n  * Creates a new Query for a collection group query that matches all documents\n  * within the provided collection group.\n  */\n  function (t) {\n    return new un(X.emptyPath(), t);\n  }(n));\n}\n\nfunction me(t, n) {\n  for (var _len6 = arguments.length, e = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    e[_key6 - 2] = arguments[_key6];\n  }\n\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (n = pt.R()), et(\"doc\", \"path\", n), t instanceof ie) {\n    var r = X.fromString.apply(X, [n].concat(e));\n    return rt(r), new he(t,\n    /* converter= */\n    null, new nt(r));\n  }\n\n  {\n    if (!(t instanceof he || t instanceof fe)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r3 = t._path.child(X.fromString.apply(X, [n].concat(e)));\n\n    return rt(_r3), new he(t.firestore, t instanceof fe ? t.converter : null, new nt(_r3));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction pe(t, n) {\n  return t = getModularInstance(t), n = getModularInstance(n), (t instanceof he || t instanceof fe) && (n instanceof he || n instanceof fe) && t.firestore === n.firestore && t.path === n.path && t.converter === n.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction ye(t, n) {\n  return t = getModularInstance(t), n = getModularInstance(n), t instanceof le && n instanceof le && t.firestore === n.firestore && wn(t._query, n._query) && t.converter === n.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nvar _e = /*#__PURE__*/function () {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  function _e() {\n    _classCallCheck(this, _e);\n\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n\n    for (var n = 0; n < t.length; ++n) {\n      if (0 === t[n].length) throw new U(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    }\n\n    this._internalPath = new tt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  _createClass(_e, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._internalPath.isEqual(t._internalPath);\n    }\n  }]);\n\n  return _e;\n}();\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction ge() {\n  return new _e(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nvar ve = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function ve(t) {\n    _classCallCheck(this, ve);\n\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  _createClass(ve, [{\n    key: \"toBase64\",\n    value:\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    function toBase64() {\n      return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._byteString.isEqual(t._byteString);\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      try {\n        return new ve(It.fromBase64String(t));\n      } catch (t) {\n        throw new U(A, \"Failed to construct data from Base64 string: \" + t);\n      }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      return new ve(It.fromUint8Array(t));\n    }\n  }]);\n\n  return ve;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nvar be = /*#__PURE__*/_createClass(\n/**\n * @param _methodName - The public API endpoint that returns this class.\n * @hideconstructor\n */\nfunction be(t) {\n  _classCallCheck(this, be);\n\n  this._methodName = t;\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nvar Ee = /*#__PURE__*/function () {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  function Ee(t, n) {\n    _classCallCheck(this, Ee);\n\n    if (!isFinite(t) || t < -90 || t > 90) throw new U(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(n) || n < -180 || n > 180) throw new U(A, \"Longitude must be a number between -180 and 180, but was: \" + n);\n    this._lat = t, this._long = n;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  _createClass(Ee, [{\n    key: \"latitude\",\n    get: function get() {\n      return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */\n\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        latitude: this._lat,\n        longitude: this._long\n      };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n  }]);\n\n  return Ee;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Te = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nvar Ie = /*#__PURE__*/function () {\n  function Ie(t, n, e) {\n    _classCallCheck(this, Ie);\n\n    this.data = t, this.fieldMask = n, this.fieldTransforms = e;\n  }\n\n  _createClass(Ie, [{\n    key: \"toMutation\",\n    value: function toMutation(t, n) {\n      return null !== this.fieldMask ? new An(t, this.data, this.fieldMask, n, this.fieldTransforms) : new In(t, this.data, n, this.fieldTransforms);\n    }\n  }]);\n\n  return Ie;\n}();\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nvar Ae = /*#__PURE__*/function () {\n  function Ae(t, // The fieldMask does not include document transforms.\n  n, e) {\n    _classCallCheck(this, Ae);\n\n    this.data = t, this.fieldMask = n, this.fieldTransforms = e;\n  }\n\n  _createClass(Ae, [{\n    key: \"toMutation\",\n    value: function toMutation(t, n) {\n      return new An(t, this.data, this.fieldMask, n, this.fieldTransforms);\n    }\n  }]);\n\n  return Ae;\n}();\n\nfunction Re(t) {\n  switch (t) {\n    case 0\n    /* Set */\n    : // fall through\n\n    case 2\n    /* MergeSet */\n    : // fall through\n\n    case 1\n    /* Update */\n    :\n      return !0;\n\n    case 3\n    /* Argument */\n    :\n    case 4\n    /* ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw g();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nvar Pe = /*#__PURE__*/function () {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  function Pe(t, n, e, r, s, i) {\n    _classCallCheck(this, Pe);\n\n    this.settings = t, this.databaseId = n, this.q = e, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n\n  _createClass(Pe, [{\n    key: \"path\",\n    get: function get() {\n      return this.settings.path;\n    }\n  }, {\n    key: \"tt\",\n    get: function get() {\n      return this.settings.tt;\n    }\n    /** Returns a new context with the specified settings overwritten. */\n\n  }, {\n    key: \"nt\",\n    value: function nt(t) {\n      return new Pe(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.q, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n  }, {\n    key: \"et\",\n    value: function et(t) {\n      var n;\n      var e = null === (n = this.path) || void 0 === n ? void 0 : n.child(t),\n          r = this.nt({\n        path: e,\n        rt: !1\n      });\n      return r.st(t), r;\n    }\n  }, {\n    key: \"it\",\n    value: function it(t) {\n      var n;\n      var e = null === (n = this.path) || void 0 === n ? void 0 : n.child(t),\n          r = this.nt({\n        path: e,\n        rt: !1\n      });\n      return r.Z(), r;\n    }\n  }, {\n    key: \"ot\",\n    value: function ot(t) {\n      // TODO(b/34871131): We don't support array paths right now; so make path\n      // undefined.\n      return this.nt({\n        path: void 0,\n        rt: !0\n      });\n    }\n  }, {\n    key: \"ut\",\n    value: function ut(t) {\n      return We(t, this.settings.methodName, this.settings.ct || !1, this.path, this.settings.at);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n  }, {\n    key: \"contains\",\n    value: function contains(t) {\n      return void 0 !== this.fieldMask.find(function (n) {\n        return t.isPrefixOf(n);\n      }) || void 0 !== this.fieldTransforms.find(function (n) {\n        return t.isPrefixOf(n.field);\n      });\n    }\n  }, {\n    key: \"Z\",\n    value: function Z() {\n      // TODO(b/34871131): Remove null check once we have proper paths for fields\n      // within arrays.\n      if (this.path) for (var t = 0; t < this.path.length; t++) {\n        this.st(this.path.get(t));\n      }\n    }\n  }, {\n    key: \"st\",\n    value: function st(t) {\n      if (0 === t.length) throw this.ut(\"Document fields must not be empty\");\n      if (Re(this.tt) && Te.test(t)) throw this.ut('Document fields cannot begin and end with \"__\"');\n    }\n  }]);\n\n  return Pe;\n}();\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nvar Ve = /*#__PURE__*/function () {\n  function Ve(t, n, e) {\n    _classCallCheck(this, Ve);\n\n    this.databaseId = t, this.ignoreUndefinedProperties = n, this.q = e || Kn(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  _createClass(Ve, [{\n    key: \"ht\",\n    value: function ht(t, n, e) {\n      var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n      return new Pe({\n        tt: t,\n        methodName: n,\n        at: e,\n        path: tt.emptyPath(),\n        rt: !1,\n        ct: r\n      }, this.databaseId, this.q, this.ignoreUndefinedProperties);\n    }\n  }]);\n\n  return Ve;\n}();\n\nfunction De(t) {\n  var n = t._freezeSettings(),\n      e = Kn(t._databaseId);\n\n  return new Ve(t._databaseId, !!n.ignoreUndefinedProperties, e);\n}\n/** Parse document data from a set() call. */\n\n\nfunction Ne(t, n, e, r, s) {\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var o = t.ht(i.merge || i.mergeFields ? 2\n  /* MergeSet */\n  : 0\n  /* Set */\n  , n, e, s);\n  Be(\"Data must be an object, but it was:\", o, r);\n  var u = je(r, o);\n  var c, a;\n  if (i.merge) c = new Tt(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    var _t13 = [];\n\n    var _iterator6 = _createForOfIteratorHelper(i.mergeFields),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _r4 = _step6.value;\n\n        var _s = ze(n, _r4, e);\n\n        if (!o.contains(_s)) throw new U(A, \"Field '\".concat(_s, \"' is specified in your field mask but missing from your input data.\"));\n        Ye(_t13, _s) || _t13.push(_s);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    c = new Tt(_t13), a = o.fieldTransforms.filter(function (t) {\n      return c.covers(t.field);\n    });\n  } else c = null, a = o.fieldTransforms;\n  return new Ie(new Bt(u), c, a);\n}\n\nvar $e = /*#__PURE__*/function (_be) {\n  _inherits($e, _be);\n\n  var _super23 = _createSuper($e);\n\n  function $e() {\n    _classCallCheck(this, $e);\n\n    return _super23.apply(this, arguments);\n  }\n\n  _createClass($e, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      if (2\n      /* MergeSet */\n      !== t.tt) throw 1\n      /* Update */\n      === t.tt ? t.ut(\"\".concat(this._methodName, \"() can only appear at the top level of your update data\")) : t.ut(\"\".concat(this._methodName, \"() cannot be used with set() unless you pass {merge:true}\")); // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n\n      return t.fieldMask.push(t.path), null;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof $e;\n    }\n  }]);\n\n  return $e;\n}(be);\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction Se(t, n, e) {\n  return new Pe({\n    tt: 3\n    /* Argument */\n    ,\n    at: n.settings.at,\n    methodName: t._methodName,\n    rt: e\n  }, n.databaseId, n.q, n.ignoreUndefinedProperties);\n}\n\nvar Fe = /*#__PURE__*/function (_be2) {\n  _inherits(Fe, _be2);\n\n  var _super24 = _createSuper(Fe);\n\n  function Fe() {\n    _classCallCheck(this, Fe);\n\n    return _super24.apply(this, arguments);\n  }\n\n  _createClass(Fe, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      return new bn(t.path, new yn());\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Fe;\n    }\n  }]);\n\n  return Fe;\n}(be);\n\nvar xe = /*#__PURE__*/function (_be3) {\n  _inherits(xe, _be3);\n\n  var _super25 = _createSuper(xe);\n\n  function xe(t, n) {\n    var _this27;\n\n    _classCallCheck(this, xe);\n\n    _this27 = _super25.call(this, t), _this27.lt = n;\n    return _this27;\n  }\n\n  _createClass(xe, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var n = Se(this, t,\n      /*array=*/\n      !0),\n          e = this.lt.map(function (t) {\n        return ke(t, n);\n      }),\n          r = new _n(e);\n      return new bn(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return xe;\n}(be);\n\nvar qe = /*#__PURE__*/function (_be4) {\n  _inherits(qe, _be4);\n\n  var _super26 = _createSuper(qe);\n\n  function qe(t, n) {\n    var _this28;\n\n    _classCallCheck(this, qe);\n\n    _this28 = _super26.call(this, t), _this28.lt = n;\n    return _this28;\n  }\n\n  _createClass(qe, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var n = Se(this, t,\n      /*array=*/\n      !0),\n          e = this.lt.map(function (t) {\n        return ke(t, n);\n      }),\n          r = new gn(e);\n      return new bn(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return qe;\n}(be);\n\nvar Oe = /*#__PURE__*/function (_be5) {\n  _inherits(Oe, _be5);\n\n  var _super27 = _createSuper(Oe);\n\n  function Oe(t, n) {\n    var _this29;\n\n    _classCallCheck(this, Oe);\n\n    _this29 = _super27.call(this, t), _this29.ft = n;\n    return _this29;\n  }\n\n  _createClass(Oe, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var n = new vn(t.q, mn(t.q, this.ft));\n      return new bn(t.path, n);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Oe;\n}(be);\n/** Parse update data from an update() call. */\n\n\nfunction Ce(t, n, e, r) {\n  var s = t.ht(1\n  /* Update */\n  , n, e);\n  Be(\"Data must be an object, but it was:\", s, r);\n  var i = [],\n      o = Bt.empty();\n  Et(r, function (t, r) {\n    var u = Qe(n, t, e); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    r = getModularInstance(r);\n    var c = s.it(u);\n    if (r instanceof $e) // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      var _t14 = ke(r, c);\n\n      null != _t14 && (i.push(u), o.set(u, _t14));\n    }\n  });\n  var u = new Tt(i);\n  return new Ae(o, u, s.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction Le(t, n, e, r, s, i) {\n  var o = t.ht(1\n  /* Update */\n  , n, e),\n      u = [ze(n, r, e)],\n      c = [s];\n  if (i.length % 2 != 0) throw new U(A, \"Function \".concat(n, \"() needs to be called with an even number of arguments that alternate between field names and values.\"));\n\n  for (var _t15 = 0; _t15 < i.length; _t15 += 2) {\n    u.push(ze(n, i[_t15])), c.push(i[_t15 + 1]);\n  }\n\n  var a = [],\n      l = Bt.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (var _t16 = u.length - 1; _t16 >= 0; --_t16) {\n    if (!Ye(a, u[_t16])) {\n      var _n12 = u[_t16];\n      var _e8 = c[_t16]; // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      _e8 = getModularInstance(_e8);\n\n      var _r5 = o.it(_n12);\n\n      if (_e8 instanceof $e) // Add it to the field mask, but don't add anything to updateData.\n        a.push(_n12);else {\n        var _t17 = ke(_e8, _r5);\n\n        null != _t17 && (a.push(_n12), l.set(_n12, _t17));\n      }\n    }\n  }\n\n  var f = new Tt(a);\n  return new Ae(l, f, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction Ue(t, n, e) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return ke(e, t.ht(r ? 4\n  /* ArrayArgument */\n  : 3\n  /* Argument */\n  , n));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction ke(t, n) {\n  if (Me( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return Be(\"Unsupported field value:\", n, t), je(t, n);\n  if (t instanceof be) // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, n) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Re(n.tt)) throw n.ut(\"\".concat(t._methodName, \"() can only be used with update() and set()\"));\n      if (!n.path) throw n.ut(\"\".concat(t._methodName, \"() is not currently supported inside arrays\"));\n\n      var e = t._toFieldTransform(n);\n\n      e && n.fieldTransforms.push(e);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, n), null;\n  if (void 0 === t && n.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  n.path && n.fieldMask.push(n.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (n.settings.rt && 4\n    /* ArrayArgument */\n    !== n.tt) throw n.ut(\"Nested arrays are not supported\");\n    return function (t, n) {\n      var e = [];\n      var r = 0;\n\n      var _iterator7 = _createForOfIteratorHelper(t),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var s = _step7.value;\n\n          var _t18 = ke(s, n.ot(r));\n\n          null == _t18 && ( // Just include nulls in the array for fields being replaced with a\n          // sentinel.\n          _t18 = {\n            nullValue: \"NULL_VALUE\"\n          }), e.push(_t18), r++;\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return {\n        arrayValue: {\n          values: e\n        }\n      };\n    }(t, n);\n  }\n\n  return function (t, n) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return mn(n.q, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      var e = gt.fromDate(t);\n      return {\n        timestampValue: $n(n.q, e)\n      };\n    }\n\n    if (t instanceof gt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      var _e9 = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n\n      return {\n        timestampValue: $n(n.q, _e9)\n      };\n    }\n\n    if (t instanceof Ee) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof ve) return {\n      bytesValue: Sn(n.q, t._byteString)\n    };\n\n    if (t instanceof he) {\n      var _e10 = n.databaseId,\n          r = t.firestore._databaseId;\n      if (!r.isEqual(_e10)) throw n.ut(\"Document reference is for database \".concat(r.projectId, \"/\").concat(r.database, \" but should be for database \").concat(_e10.projectId, \"/\").concat(_e10.database));\n      return {\n        referenceValue: qn(t.firestore._databaseId || n.databaseId, t._key.path)\n      };\n    }\n\n    throw n.ut(\"Unsupported field value: \".concat(it(t)));\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, n);\n}\n\nfunction je(t, n) {\n  var e = {};\n  return !function (t) {\n    for (var _n13 in t) {\n      if (Object.prototype.hasOwnProperty.call(t, _n13)) return !1;\n    }\n\n    return !0;\n  }(t) ? Et(t, function (t, r) {\n    var s = ke(r, n.et(t));\n    null != s && (e[t] = s);\n  }) : // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  n.path && n.path.length > 0 && n.fieldMask.push(n.path), {\n    mapValue: {\n      fields: e\n    }\n  };\n}\n\nfunction Me(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof Ee || t instanceof ve || t instanceof he || t instanceof be);\n}\n\nfunction Be(t, n, e) {\n  if (!Me(e) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(e)) {\n    var r = it(e);\n    throw \"an object\" === r ? n.ut(t + \" a custom object\") : n.ut(t + \" \" + r);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction ze(t, n, e) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  n = getModularInstance(n)) instanceof _e) return n._internalPath;\n  if (\"string\" == typeof n) return Qe(t, n);\n  throw We(\"Field path arguments must be of type string or \", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, e);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nvar Ge = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction Qe(t, n, e) {\n  if (n.search(Ge) >= 0) throw We(\"Invalid field path (\".concat(n, \"). Paths must not contain '~', '*', '/', '[', or ']'\"), t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, e);\n\n  try {\n    return _construct(_e, _toConsumableArray(n.split(\".\")))._internalPath;\n  } catch (r) {\n    throw We(\"Invalid field path (\".concat(n, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"), t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, e);\n  }\n}\n\nfunction We(t, n, e, r, s) {\n  var i = r && !r.isEmpty(),\n      o = void 0 !== s;\n  var u = \"Function \".concat(n, \"() called with invalid data\");\n  e && (u += \" (via `toFirestore()`)\"), u += \". \";\n  var c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += \" in field \".concat(r)), o && (c += \" in document \".concat(s)), c += \")\"), new U(A, u + t + c);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction Ye(t, n) {\n  return t.some(function (t) {\n    return t.isEqual(n);\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nvar He = /*#__PURE__*/function () {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  function He(t, n, e, r, s) {\n    _classCallCheck(this, He);\n\n    this._firestore = t, this._userDataWriter = n, this._key = e, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  _createClass(He, [{\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */\n\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return new he(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      if (this._document) {\n        if (this._converter) {\n          // We only want to use the converter and create a new DocumentSnapshot\n          // if a converter has been provided.\n          var t = new Ke(this._firestore, this._userDataWriter, this._key, this._document,\n          /* converter= */\n          null);\n          return this._converter.fromFirestore(t);\n        }\n\n        return this._userDataWriter.convertValue(this._document.data.value);\n      }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      if (this._document) {\n        var n = this._document.data.field(Ze(\"DocumentSnapshot.get\", t));\n\n        if (null !== n) return this._userDataWriter.convertValue(n);\n      }\n    }\n  }]);\n\n  return He;\n}();\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nvar Ke = /*#__PURE__*/function (_He) {\n  _inherits(Ke, _He);\n\n  var _super28 = _createSuper(Ke);\n\n  function Ke() {\n    _classCallCheck(this, Ke);\n\n    return _super28.apply(this, arguments);\n  }\n\n  _createClass(Ke, [{\n    key: \"data\",\n    value:\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    function data() {\n      return _get(_getPrototypeOf(Ke.prototype), \"data\", this).call(this);\n    }\n  }]);\n\n  return Ke;\n}(He);\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nvar Je = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Je(t, n) {\n    _classCallCheck(this, Je);\n\n    this._docs = n, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  _createClass(Je, [{\n    key: \"docs\",\n    get: function get() {\n      return _toConsumableArray(this._docs);\n    }\n    /** The number of documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t, n) {\n      this._docs.forEach(t, n);\n    }\n  }]);\n\n  return Je;\n}();\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction Xe(t, n) {\n  return t = getModularInstance(t), n = getModularInstance(n), t instanceof He && n instanceof He ? t._firestore === n._firestore && t._key.isEqual(n._key) && (null === t._document ? null === n._document : t._document.isEqual(n._document)) && t._converter === n._converter : t instanceof Je && n instanceof Je && ye(t.query, n.query) && _t(t.docs, n.docs, Xe);\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction Ze(t, n) {\n  return \"string\" == typeof n ? Qe(t, n) : n instanceof _e ? n._internalPath : n._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nvar tr = /*#__PURE__*/_createClass(function tr() {\n  _classCallCheck(this, tr);\n});\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\n\n\nfunction nr(t) {\n  for (var _len8 = arguments.length, n = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    n[_key8 - 1] = arguments[_key8];\n  }\n\n  for (var _i3 = 0, _n14 = n; _i3 < _n14.length; _i3++) {\n    var e = _n14[_i3];\n    t = e._apply(t);\n  }\n\n  return t;\n}\n\nvar er = /*#__PURE__*/function (_tr) {\n  _inherits(er, _tr);\n\n  var _super29 = _createSuper(er);\n\n  function er(t, n, e) {\n    var _this30;\n\n    _classCallCheck(this, er);\n\n    _this30 = _super29.call(this), _this30.dt = t, _this30.wt = n, _this30.yt = e, _this30.type = \"where\";\n    return _this30;\n  }\n\n  _createClass(er, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var n = De(t.firestore),\n          e = function (t, n, e, r, s, i, o) {\n        var u;\n\n        if (s.isKeyField()) {\n          if (\"array-contains\"\n          /* ARRAY_CONTAINS */\n          === i || \"array-contains-any\"\n          /* ARRAY_CONTAINS_ANY */\n          === i) throw new U(A, \"Invalid Query. You can't perform '\".concat(i, \"' queries on documentId().\"));\n\n          if (\"in\"\n          /* IN */\n          === i || \"not-in\"\n          /* NOT_IN */\n          === i) {\n            yr(o, i);\n            var _n15 = [];\n\n            var _iterator8 = _createForOfIteratorHelper(o),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _e11 = _step8.value;\n\n                _n15.push(pr(r, t, _e11));\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n\n            u = {\n              arrayValue: {\n                values: _n15\n              }\n            };\n          } else u = pr(r, t, o);\n        } else \"in\"\n        /* IN */\n        !== i && \"not-in\"\n        /* NOT_IN */\n        !== i && \"array-contains-any\"\n        /* ARRAY_CONTAINS_ANY */\n        !== i || yr(o, i), u = Ue(e, n, o,\n        /* allowArrays= */\n        \"in\"\n        /* IN */\n        === i || \"not-in\"\n        /* NOT_IN */\n        === i);\n\n        var c = Wt.create(s, i, u);\n        return function (t, n) {\n          if (n.N()) {\n            var _e12 = hn(t);\n\n            if (null !== _e12 && !_e12.isEqual(n.field)) throw new U(A, \"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\".concat(_e12.toString(), \"' and '\").concat(n.field.toString(), \"'\"));\n\n            var _r6 = an(t);\n\n            null !== _r6 && _r(t, n.field, _r6);\n          }\n\n          var e = function (t, n) {\n            var _iterator9 = _createForOfIteratorHelper(t.filters),\n                _step9;\n\n            try {\n              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                var _e13 = _step9.value;\n                if (n.indexOf(_e13.op) >= 0) return _e13.op;\n              }\n            } catch (err) {\n              _iterator9.e(err);\n            } finally {\n              _iterator9.f();\n            }\n\n            return null;\n          }(t,\n          /**\n          * Given an operator, returns the set of operators that cannot be used with it.\n          *\n          * Operators in a query must adhere to the following set of rules:\n          * 1. Only one array operator is allowed.\n          * 2. Only one disjunctive operator is allowed.\n          * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n          * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n          *\n          * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n          * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n          */\n          function (t) {\n            switch (t) {\n              case \"!=\"\n              /* NOT_EQUAL */\n              :\n                return [\"!=\"\n                /* NOT_EQUAL */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"array-contains\"\n              /* ARRAY_CONTAINS */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"in\"\n              /* IN */\n              :\n                return [\"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"not-in\"\n              /* NOT_IN */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                , \"!=\"\n                /* NOT_EQUAL */\n                ];\n\n              default:\n                return [];\n            }\n          }(n.op));\n\n          if (null !== e) // Special case when it's a duplicate op to give a slightly clearer error message.\n            throw e === n.op ? new U(A, \"Invalid query. You cannot use more than one '\".concat(n.op.toString(), \"' filter.\")) : new U(A, \"Invalid query. You cannot use '\".concat(n.op.toString(), \"' filters with '\").concat(e.toString(), \"' filters.\"));\n        }(t, c), c;\n      }(t._query, \"where\", n, t.firestore._databaseId, this.dt, this.wt, this.yt);\n\n      return new le(t.firestore, t.converter, function (t, n) {\n        var e = t.filters.concat([n]);\n        return new un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), e, t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, e));\n    }\n  }]);\n\n  return er;\n}(tr);\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */\n\n\nfunction rr(t, n, e) {\n  var r = n,\n      s = Ze(\"where\", t);\n  return new er(s, r, e);\n}\n\nvar sr = /*#__PURE__*/function (_tr2) {\n  _inherits(sr, _tr2);\n\n  var _super30 = _createSuper(sr);\n\n  function sr(t, n) {\n    var _this31;\n\n    _classCallCheck(this, sr);\n\n    _this31 = _super30.call(this), _this31.dt = t, _this31._t = n, _this31.type = \"orderBy\";\n    return _this31;\n  }\n\n  _createClass(sr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var n = function (t, n, e) {\n        if (null !== t.startAt) throw new U(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n        if (null !== t.endAt) throw new U(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n        var r = new rn(n, e);\n        return function (t, n) {\n          if (null === an(t)) {\n            // This is the first order by. It must match any inequality.\n            var _e14 = hn(t);\n\n            null !== _e14 && _r(t, _e14, n.field);\n          }\n        }(t, r), r;\n      }\n      /**\n      * Create a `Bound` from a query and a document.\n      *\n      * Note that the `Bound` will always include the key of the document\n      * and so only the provided document will compare equal to the returned\n      * position.\n      *\n      * Will throw if the document does not contain all fields of the order by\n      * of the query or if any of the fields in the order by are an uncommitted\n      * server timestamp.\n      */\n      (t._query, this.dt, this._t);\n\n      return new le(t.firestore, t.converter, function (t, n) {\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var e = t.explicitOrderBy.concat([n]);\n        return new un(t.path, t.collectionGroup, e, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, n));\n    }\n  }]);\n\n  return sr;\n}(tr);\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */\n\n\nfunction ir(t) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  var e = n,\n      r = Ze(\"orderBy\", t);\n  return new sr(r, e);\n}\n\nvar or = /*#__PURE__*/function (_tr3) {\n  _inherits(or, _tr3);\n\n  var _super31 = _createSuper(or);\n\n  function or(t, n, e) {\n    var _this32;\n\n    _classCallCheck(this, or);\n\n    _this32 = _super31.call(this), _this32.type = t, _this32.gt = n, _this32.vt = e;\n    return _this32;\n  }\n\n  _createClass(or, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      return new le(t.firestore, t.converter, function (t, n, e) {\n        return new un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), n, e, t.startAt, t.endAt);\n      }(t._query, this.gt, this.vt));\n    }\n  }]);\n\n  return or;\n}(tr);\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction ur(t) {\n  return ut(\"limit\", t), new or(\"limit\", t, \"F\"\n  /* First */\n  );\n}\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction cr(t) {\n  return ut(\"limitToLast\", t), new or(\"limitToLast\", t, \"L\"\n  /* Last */\n  );\n}\n\nvar ar = /*#__PURE__*/function (_tr4) {\n  _inherits(ar, _tr4);\n\n  var _super32 = _createSuper(ar);\n\n  function ar(t, n, e) {\n    var _this33;\n\n    _classCallCheck(this, ar);\n\n    _this33 = _super32.call(this), _this33.type = t, _this33.bt = n, _this33.Et = e;\n    return _this33;\n  }\n\n  _createClass(ar, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var n = mr(t, this.type, this.bt, this.Et);\n      return new le(t.firestore, t.converter, function (t, n) {\n        return new un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, n, t.endAt);\n      }(t._query, n));\n    }\n  }]);\n\n  return ar;\n}(tr);\n\nfunction hr() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n\n  return new ar(\"startAt\", t,\n  /*before=*/\n  !0);\n}\n\nfunction lr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n\n  return new ar(\"startAfter\", t,\n  /*before=*/\n  !1);\n}\n\nvar fr = /*#__PURE__*/function (_tr5) {\n  _inherits(fr, _tr5);\n\n  var _super33 = _createSuper(fr);\n\n  function fr(t, n, e) {\n    var _this34;\n\n    _classCallCheck(this, fr);\n\n    _this34 = _super33.call(this), _this34.type = t, _this34.bt = n, _this34.Et = e;\n    return _this34;\n  }\n\n  _createClass(fr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var n = mr(t, this.type, this.bt, this.Et);\n      return new le(t.firestore, t.converter, function (t, n) {\n        return new un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, n);\n      }(t._query, n));\n    }\n  }]);\n\n  return fr;\n}(tr);\n\nfunction dr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n\n  return new fr(\"endBefore\", t,\n  /*before=*/\n  !0);\n}\n\nfunction wr() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n\n  return new fr(\"endAt\", t,\n  /*before=*/\n  !1);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction mr(t, n, e, r) {\n  if (e[0] = getModularInstance(e[0]), e[0] instanceof He) return function (t, n, e, r, s) {\n    if (!r) throw new U(P, \"Can't use a DocumentSnapshot that doesn't exist for \".concat(e, \"().\"));\n    var i = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    var _iterator10 = _createForOfIteratorHelper(fn(t)),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var _e15 = _step10.value;\n        if (_e15.field.isKeyField()) i.push(Ct(n, r.key));else {\n          var _t19 = r.data.field(_e15.field);\n\n          if (Dt(_t19)) throw new U(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + _e15.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n          if (null === _t19) {\n            var _t20 = _e15.field.canonicalString();\n\n            throw new U(A, \"Invalid query. You are trying to start or end a query using a document for which the field '\".concat(_t20, \"' (used as the orderBy) does not exist.\"));\n          }\n\n          i.push(_t19);\n        }\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    return new en(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, n, e[0]._document, r);\n  {\n    var s = De(t.firestore);\n    return function (t, n, e, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      var o = t.explicitOrderBy;\n      if (s.length > o.length) throw new U(A, \"Too many arguments provided to \".concat(r, \"(). The number of arguments must be less than or equal to the number of orderBy() clauses\"));\n      var u = [];\n\n      for (var _i4 = 0; _i4 < s.length; _i4++) {\n        var c = s[_i4];\n\n        if (o[_i4].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new U(A, \"Invalid query. Expected a string for document ID in \".concat(r, \"(), but got a \").concat(typeof c));\n          if (!ln(t) && -1 !== c.indexOf(\"/\")) throw new U(A, \"Invalid query. When querying a collection and ordering by documentId(), the value passed to \".concat(r, \"() must be a plain document ID, but '\").concat(c, \"' contains a slash.\"));\n\n          var _e16 = t.path.child(X.fromString(c));\n\n          if (!nt.isDocumentKey(_e16)) throw new U(A, \"Invalid query. When querying a collection group and ordering by documentId(), the value passed to \".concat(r, \"() must result in a valid document path, but '\").concat(_e16, \"' is not because it contains an odd number of segments.\"));\n\n          var _s2 = new nt(_e16);\n\n          u.push(Ct(n, _s2));\n        } else {\n          var _t21 = Ue(e, r, c);\n\n          u.push(_t21);\n        }\n      }\n\n      return new en(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, s, n, e, r);\n  }\n}\n\nfunction pr(t, n, e) {\n  if (\"string\" == typeof (e = getModularInstance(e))) {\n    if (\"\" === e) throw new U(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!ln(n) && -1 !== e.indexOf(\"/\")) throw new U(A, \"Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '\".concat(e, \"' contains a '/' character.\"));\n    var r = n.path.child(X.fromString(e));\n    if (!nt.isDocumentKey(r)) throw new U(A, \"Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '\".concat(r, \"' is not because it has an odd number of segments (\").concat(r.length, \").\"));\n    return Ct(t, new nt(r));\n  }\n\n  if (e instanceof he) return Ct(t, e._key);\n  throw new U(A, \"Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: \".concat(it(e), \".\"));\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction yr(t, n) {\n  if (!Array.isArray(t) || 0 === t.length) throw new U(A, \"Invalid Query. A non-empty array is required for '\".concat(n.toString(), \"' filters.\"));\n  if (t.length > 10) throw new U(A, \"Invalid Query. '\".concat(n.toString(), \"' filters support a maximum of 10 elements in the value array.\"));\n}\n\nfunction _r(t, n, e) {\n  if (!e.isEqual(n)) throw new U(A, \"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\".concat(n.toString(), \"' and so you must also use '\").concat(n.toString(), \"' as your first argument to orderBy(), but your first orderBy() is on field '\").concat(e.toString(), \"' instead.\"));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction gr(t, n, e) {\n  var r; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return r = t ? e && (e.merge || e.mergeFields) ? t.toFirestore(n, e) : t.toFirestore(n) : n, r;\n}\n\nvar vr = /*#__PURE__*/function (_ref8) {\n  _inherits(vr, _ref8);\n\n  var _super34 = _createSuper(vr);\n\n  function vr(t) {\n    var _this35;\n\n    _classCallCheck(this, vr);\n\n    _this35 = _super34.call(this), _this35.firestore = t;\n    return _this35;\n  }\n\n  _createClass(vr, [{\n    key: \"convertBytes\",\n    value: function convertBytes(t) {\n      return new ve(t);\n    }\n  }, {\n    key: \"convertReference\",\n    value: function convertReference(t) {\n      var n = this.convertDocumentKey(t, this.firestore._databaseId);\n      return new he(this.firestore,\n      /* converter= */\n      null, n);\n    }\n  }]);\n\n  return vr;\n}( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n\n  _createClass(_class4, [{\n    key: \"convertValue\",\n    value: function convertValue(t) {\n      var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n\n      switch (St(t)) {\n        case 0\n        /* NullValue */\n        :\n          return null;\n\n        case 1\n        /* BooleanValue */\n        :\n          return t.booleanValue;\n\n        case 2\n        /* NumberValue */\n        :\n          return Pt(t.integerValue || t.doubleValue);\n\n        case 3\n        /* TimestampValue */\n        :\n          return this.convertTimestamp(t.timestampValue);\n\n        case 4\n        /* ServerTimestampValue */\n        :\n          return this.convertServerTimestamp(t, n);\n\n        case 5\n        /* StringValue */\n        :\n          return t.stringValue;\n\n        case 6\n        /* BlobValue */\n        :\n          return this.convertBytes(Vt(t.bytesValue));\n\n        case 7\n        /* RefValue */\n        :\n          return this.convertReference(t.referenceValue);\n\n        case 8\n        /* GeoPointValue */\n        :\n          return this.convertGeoPoint(t.geoPointValue);\n\n        case 9\n        /* ArrayValue */\n        :\n          return this.convertArray(t.arrayValue, n);\n\n        case 10\n        /* ObjectValue */\n        :\n          return this.convertObject(t.mapValue, n);\n\n        default:\n          throw g();\n      }\n    }\n  }, {\n    key: \"convertObject\",\n    value: function convertObject(t, n) {\n      var _this36 = this;\n\n      var e = {};\n      return Et(t.fields, function (t, r) {\n        e[t] = _this36.convertValue(r, n);\n      }), e;\n    }\n  }, {\n    key: \"convertGeoPoint\",\n    value: function convertGeoPoint(t) {\n      return new Ee(Pt(t.latitude), Pt(t.longitude));\n    }\n  }, {\n    key: \"convertArray\",\n    value: function convertArray(t, n) {\n      var _this37 = this;\n\n      return (t.values || []).map(function (t) {\n        return _this37.convertValue(t, n);\n      });\n    }\n  }, {\n    key: \"convertServerTimestamp\",\n    value: function convertServerTimestamp(t, n) {\n      switch (n) {\n        case \"previous\":\n          var e = Nt(t);\n          return null == e ? null : this.convertValue(e, n);\n\n        case \"estimate\":\n          return this.convertTimestamp($t(t));\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"convertTimestamp\",\n    value: function convertTimestamp(t) {\n      var n = Rt(t);\n      return new gt(n.seconds, n.nanos);\n    }\n  }, {\n    key: \"convertDocumentKey\",\n    value: function convertDocumentKey(t, n) {\n      var e = X.fromString(t);\n      v(Hn(e));\n      var r = new K(e.get(1), e.get(3)),\n          s = new nt(e.popFirst(5));\n      return r.isEqual(n) || // TODO(b/64130202): Somehow support foreign references.\n      p(\"Document \".concat(s, \" contains a document reference within a different database (\").concat(r.projectId, \"/\").concat(r.database, \") which is not supported. It will be treated as a reference in the current database (\").concat(n.projectId, \"/\").concat(n.database, \") instead.\")), s;\n    }\n  }]);\n\n  return _class4;\n}());\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\n\n\nfunction br(t) {\n  var n = re((t = ot(t, he)).firestore),\n      e = new vr(t.firestore);\n  return te(n, [t._key]).then(function (n) {\n    v(1 === n.length);\n    var r = n[0];\n    return new He(t.firestore, e, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\n\n\nfunction Er(t) {\n  !function (t) {\n    if (cn(t) && 0 === t.explicitOrderBy.length) throw new U(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ot(t, le))._query);\n  var n = re(t.firestore),\n      e = new vr(t.firestore);\n  return ne(n, t._query).then(function (n) {\n    var r = n.map(function (n) {\n      return new Ke(t.firestore, e, n.key, n, t.converter);\n    });\n    return cn(t._query) && // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new Je(t, r);\n  });\n}\n\nfunction Tr(t, n, e) {\n  var r = gr((t = ot(t, he)).converter, n, e),\n      s = Ne(De(t.firestore), \"setDoc\", t._key, r, null !== t.converter, e);\n  return Zn(re(t.firestore), [s.toMutation(t._key, En.none())]);\n}\n\nfunction Ir(t, n, e) {\n  var s = De((t = ot(t, he)).firestore); // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n\n  var i;\n\n  for (var _len13 = arguments.length, r = new Array(_len13 > 3 ? _len13 - 3 : 0), _key13 = 3; _key13 < _len13; _key13++) {\n    r[_key13 - 3] = arguments[_key13];\n  }\n\n  i = \"string\" == typeof (n = getModularInstance(n)) || n instanceof _e ? Le(s, \"updateDoc\", t._key, n, e, r) : Ce(s, \"updateDoc\", t._key, n);\n  return Zn(re(t.firestore), [i.toMutation(t._key, En.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\n\n\nfunction Ar(t) {\n  return Zn(re((t = ot(t, he)).firestore), [new Rn(t._key, En.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\n\n\nfunction Rr(t, n) {\n  var e = me(t = ot(t, fe)),\n      r = gr(t.converter, n),\n      s = Ne(De(t.firestore), \"addDoc\", e._key, r, null !== e.converter, {});\n  return Zn(re(t.firestore), [s.toMutation(e._key, En.exists(!1))]).then(function () {\n    return e;\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction Pr() {\n  return new $e(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction Vr() {\n  return new Fe(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction Dr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new xe(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction Nr() {\n  for (var _len15 = arguments.length, t = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    t[_key15] = arguments[_key15];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new qe(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction $r(t) {\n  return new Oe(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nvar Sr = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Sr(t, n) {\n    _classCallCheck(this, Sr);\n\n    this._firestore = t, this._commitHandler = n, this._mutations = [], this._committed = !1, this._dataReader = De(t);\n  }\n\n  _createClass(Sr, [{\n    key: \"set\",\n    value: function set(t, n, e) {\n      this._verifyNotCommitted();\n\n      var r = Fr(t, this._firestore),\n          s = gr(r.converter, n, e),\n          i = Ne(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, e);\n      return this._mutations.push(i.toMutation(r._key, En.none())), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, n, e) {\n      this._verifyNotCommitted();\n\n      var s = Fr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len16 = arguments.length, r = new Array(_len16 > 3 ? _len16 - 3 : 0), _key16 = 3; _key16 < _len16; _key16++) {\n        r[_key16 - 3] = arguments[_key16];\n      }\n\n      return i = \"string\" == typeof (n = getModularInstance(n)) || n instanceof _e ? Le(this._dataReader, \"WriteBatch.update\", s._key, n, e, r) : Ce(this._dataReader, \"WriteBatch.update\", s._key, n), this._mutations.push(i.toMutation(s._key, En.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this._verifyNotCommitted();\n\n      var n = Fr(t, this._firestore);\n      return this._mutations = this._mutations.concat(new Rn(n._key, En.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n  }, {\n    key: \"_verifyNotCommitted\",\n    value: function _verifyNotCommitted() {\n      if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n  }]);\n\n  return Sr;\n}();\n\nfunction Fr(t, n) {\n  if ((t = getModularInstance(t)).firestore !== n) throw new U(A, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction xr(t) {\n  var n = re(t = ot(t, ie));\n  return new Sr(t, function (t) {\n    return Zn(n, t);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nvar qr = /*#__PURE__*/function () {\n  function qr(t) {\n    _classCallCheck(this, qr);\n\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  _createClass(qr, [{\n    key: \"lookup\",\n    value: function () {\n      var _lookup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(t) {\n        var _this38 = this;\n\n        var n;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.mutations.length > 0)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new U(A, \"Firestore transactions require all reads to be executed before all writes.\");\n\n              case 2:\n                _context2.next = 4;\n                return te(this.datastore, t);\n\n              case 4:\n                n = _context2.sent;\n                return _context2.abrupt(\"return\", (n.forEach(function (t) {\n                  return _this38.recordVersion(t);\n                }), n));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function lookup(_x11) {\n        return _lookup.apply(this, arguments);\n      }\n\n      return lookup;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(t, n) {\n      this.write(n.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, n) {\n      try {\n        this.write(n.toMutation(t, this.preconditionForUpdate(t)));\n      } catch (t) {\n        this.lastWriteError = t;\n      }\n\n      this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this.write(new Rn(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"commit\",\n    value: function () {\n      var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this39 = this;\n\n        var t;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.lastWriteError)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw this.lastWriteError;\n\n              case 2:\n                t = this.readVersions; // For each mutation, note that the doc was written.\n\n                this.mutations.forEach(function (n) {\n                  t.delete(n.key.toString());\n                });\n                // For each document that was read but not written to, we want to perform\n                // a `verify` operation.\n                t.forEach(function (t, n) {\n                  var e = nt.fromPath(n);\n\n                  _this39.mutations.push(new Pn(e, _this39.precondition(e)));\n                });\n                _context3.next = 7;\n                return Zn(this.datastore, this.mutations);\n\n              case 7:\n                this.committed = !0;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function commit() {\n        return _commit.apply(this, arguments);\n      }\n\n      return commit;\n    }()\n  }, {\n    key: \"recordVersion\",\n    value: function recordVersion(t) {\n      var n;\n      if (t.isFoundDocument()) n = t.version;else {\n        if (!t.isNoDocument()) throw g(); // For deleted docs, we must use baseVersion 0 when we overwrite them.\n\n        n = vt.min();\n      }\n      var e = this.readVersions.get(t.key.toString());\n\n      if (e) {\n        if (!n.isEqual(e)) // This transaction will fail no matter what.\n          throw new U(F, \"Document version changed between two reads.\");\n      } else this.readVersions.set(t.key.toString(), n);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n\n  }, {\n    key: \"precondition\",\n    value: function precondition(t) {\n      var n = this.readVersions.get(t.toString());\n      return !this.writtenDocs.has(t.toString()) && n ? En.updateTime(n) : En.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n\n  }, {\n    key: \"preconditionForUpdate\",\n    value: function preconditionForUpdate(t) {\n      var n = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n      // read time and existence\n\n      if (!this.writtenDocs.has(t.toString()) && n) {\n        if (n.isEqual(vt.min())) // The document doesn't exist, so fail the transaction.\n          // This has to be validated locally because you can't send a\n          // precondition that a document does not exist without changing the\n          // semantics of the backend write to be an insert. This is the reverse\n          // of what we want, since we want to assert that the document doesn't\n          // exist but then send the update and have it fail. Since we can't\n          // express that to the backend, we have to validate locally.\n          // Note: this can change once we can send separate verify writes in the\n          // transaction.\n          throw new U(A, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n        return En.updateTime(n);\n      } // Document was not read, so we just use the preconditions for a blind\n      // update.\n\n\n      return En.exists(!0);\n    }\n  }, {\n    key: \"write\",\n    value: function write(t) {\n      this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n  }, {\n    key: \"ensureCommitNotCalled\",\n    value: function ensureCommitNotCalled() {}\n  }]);\n\n  return qr;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\n\nvar Or = /*#__PURE__*/function () {\n  function Or(t, n, e, r) {\n    _classCallCheck(this, Or);\n\n    this.asyncQueue = t, this.datastore = n, this.updateFunction = e, this.deferred = r, this.Tt = 5, this.It = new Jn(this.asyncQueue, \"transaction_retry\"\n    /* TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  _createClass(Or, [{\n    key: \"run\",\n    value: function run() {\n      this.Tt -= 1, this.At();\n    }\n  }, {\n    key: \"At\",\n    value: function At() {\n      var _this40 = this;\n\n      this.It.W( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var t, n;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                t = new qr(_this40.datastore), n = _this40.Rt(t);\n                n && n.then(function (n) {\n                  _this40.asyncQueue.enqueueAndForget(function () {\n                    return t.commit().then(function () {\n                      _this40.deferred.resolve(n);\n                    }).catch(function (t) {\n                      _this40.Pt(t);\n                    });\n                  });\n                }).catch(function (t) {\n                  _this40.Pt(t);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })));\n    }\n  }, {\n    key: \"Rt\",\n    value: function Rt(t) {\n      try {\n        var n = this.updateFunction(t);\n        return !ct(n) && n.catch && n.then ? n : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n      } catch (t) {\n        // Do not retry errors thrown by user provided updateFunction.\n        return this.deferred.reject(t), null;\n      }\n    }\n  }, {\n    key: \"Pt\",\n    value: function Pt(t) {\n      var _this41 = this;\n\n      this.Tt > 0 && this.Vt(t) ? (this.Tt -= 1, this.asyncQueue.enqueueAndForget(function () {\n        return _this41.At(), Promise.resolve();\n      })) : this.deferred.reject(t);\n    }\n  }, {\n    key: \"Vt\",\n    value: function Vt(t) {\n      if (\"FirebaseError\" === t.name) {\n        // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n        // non-matching document versions with ABORTED. These errors should be retried.\n        var n = t.code;\n        return \"aborted\" === n || \"failed-precondition\" === n || !\n        /**\n        * Determines whether an error code represents a permanent error when received\n        * in response to a non-write operation.\n        *\n        * See isPermanentWriteError for classifying write errors.\n        */\n        function (t) {\n          switch (t) {\n            default:\n              return g();\n\n            case T:\n            case I:\n            case R:\n            case $:\n            case O:\n            case C: // Unauthenticated means something went wrong with our token and we need\n            // to retry with new credentials which will happen automatically.\n\n            case N:\n              return !1;\n\n            case A:\n            case P:\n            case V:\n            case D:\n            case S: // Aborted might be retried in some scenarios, but that is dependant on\n            // the context and should handled individually by the calling code.\n            // See https://cloud.google.com/apis/design/errors.\n\n            case F:\n            case x:\n            case q:\n            case L:\n              return !0;\n          }\n        }(n);\n      }\n\n      return !1;\n    }\n  }]);\n\n  return Or;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction Cr() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nvar Lr = /*#__PURE__*/function () {\n  function Lr(t, n, e, r, s) {\n    _classCallCheck(this, Lr);\n\n    this.asyncQueue = t, this.timerId = n, this.targetTimeMs = e, this.op = r, this.removalCallback = s, this.deferred = new k(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(function (t) {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  _createClass(Lr, [{\n    key: \"start\",\n    value:\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    function start(t) {\n      var _this42 = this;\n\n      this.timerHandle = setTimeout(function () {\n        return _this42.handleDelayElapsed();\n      }, t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n\n  }, {\n    key: \"skipDelay\",\n    value: function skipDelay() {\n      return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(t) {\n      null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n  }, {\n    key: \"handleDelayElapsed\",\n    value: function handleDelayElapsed() {\n      var _this43 = this;\n\n      this.asyncQueue.enqueueAndForget(function () {\n        return null !== _this43.timerHandle ? (_this43.clearTimeout(), _this43.op().then(function (t) {\n          return _this43.deferred.resolve(t);\n        })) : Promise.resolve();\n      });\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n    })\n  }], [{\n    key: \"createAndSchedule\",\n    value: function createAndSchedule(t, n, e, r, s) {\n      var i = Date.now() + e,\n          o = new Lr(t, n, i, r, s);\n      return o.start(e), o;\n    }\n  }]);\n\n  return Lr;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Ur = /*#__PURE__*/function () {\n  function Ur() {\n    var _this44 = this;\n\n    _classCallCheck(this, Ur);\n\n    // The last promise in the queue.\n    this.Dt = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Nt = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.$t = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.St = [], // visible for testing\n    this.Ft = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.xt = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.qt = !1, // List of TimerIds to fast-forward delays for.\n    this.Ot = [], // Backoff timer used to schedule retries for retryable operations\n    this.It = new Jn(this, \"async_queue_retry\"\n    /* AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Ct = function () {\n      var t = Cr();\n      t && _m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), _this44.It.H();\n    };\n    var t = Cr();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ct);\n  }\n\n  _createClass(Ur, [{\n    key: \"isShuttingDown\",\n    get: function get() {\n      return this.$t;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n\n  }, {\n    key: \"enqueueAndForget\",\n    value: function enqueueAndForget(t) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.enqueue(t);\n    }\n  }, {\n    key: \"enqueueAndForgetEvenWhileRestricted\",\n    value: function enqueueAndForgetEvenWhileRestricted(t) {\n      this.Lt(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.Ut(t);\n    }\n  }, {\n    key: \"enterRestrictedMode\",\n    value: function enterRestrictedMode(t) {\n      if (!this.$t) {\n        this.$t = !0, this.qt = t || !1;\n        var n = Cr();\n        n && \"function\" == typeof n.removeEventListener && n.removeEventListener(\"visibilitychange\", this.Ct);\n      }\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(t) {\n      var _this45 = this;\n\n      if (this.Lt(), this.$t) // Return a Promise which never resolves.\n        return new Promise(function () {}); // Create a deferred Promise that we can return to the callee. This\n      // allows us to return a \"hanging Promise\" only to the callee and still\n      // advance the queue even when the operation is not run.\n\n      var n = new k();\n      return this.Ut(function () {\n        return _this45.$t && _this45.qt ? Promise.resolve() : (t().then(n.resolve, n.reject), n.promise);\n      }).then(function () {\n        return n.promise;\n      });\n    }\n  }, {\n    key: \"enqueueRetryable\",\n    value: function enqueueRetryable(t) {\n      var _this46 = this;\n\n      this.enqueueAndForget(function () {\n        return _this46.Nt.push(t), _this46.kt();\n      });\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n\n  }, {\n    key: \"kt\",\n    value: function () {\n      var _kt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this47 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(0 !== this.Nt.length)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.prev = 1;\n                _context5.next = 4;\n                return this.Nt[0]();\n\n              case 4:\n                this.Nt.shift();\n                this.It.reset();\n                _context5.next = 13;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                if (\n                /**\n                * @license\n                * Copyright 2017 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function (t) {\n                  // Use name equality, as instanceof checks on errors don't work with errors\n                  // that wrap other errors.\n                  return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n                * @license\n                * Copyright 2020 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n                (_context5.t0)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                throw _context5.t0;\n\n              case 12:\n                // Failure will be handled by AsyncQueue\n                _m(\"AsyncQueue\", \"Operation failed with retryable error: \" + _context5.t0);\n\n              case 13:\n                this.Nt.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n                // This is necessary to run retryable operations that failed during\n                // their initial attempt since we don't know whether they are already\n                // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n                // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n                // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n                // call scheduled here.\n                // Since `backoffAndRun()` cancels an existing backoff and schedules a\n                // new backoff on every call, there is only ever a single additional\n                // operation in the queue.\n                this.It.W(function () {\n                  return _this47.kt();\n                });\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 8]]);\n      }));\n\n      function kt() {\n        return _kt.apply(this, arguments);\n      }\n\n      return kt;\n    }()\n  }, {\n    key: \"Ut\",\n    value: function Ut(t) {\n      var _this48 = this;\n\n      var n = this.Dt.then(function () {\n        return _this48.xt = !0, t().catch(function (t) {\n          _this48.Ft = t, _this48.xt = !1;\n\n          var n =\n          /**\n          * Chrome includes Error.message in Error.stack. Other browsers do not.\n          * This returns expected output of message + stack when available.\n          * @param error - Error or FirestoreError\n          */\n          function (t) {\n            var n = t.message || \"\";\n            t.stack && (n = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n            return n;\n          }\n          /**\n          * @license\n          * Copyright 2020 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n          // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n          // legacy SDK.\n\n          /**\n          * A reference to a transaction.\n          *\n          * The `Transaction` object passed to a transaction's `updateFunction` provides\n          * the methods to read and write data within the transaction context. See\n          * {@link runTransaction}.\n          */\n          (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n\n\n          throw p(\"INTERNAL UNHANDLED ERROR: \", n), t;\n        }).then(function (t) {\n          return _this48.xt = !1, t;\n        });\n      });\n      return this.Dt = n, n;\n    }\n  }, {\n    key: \"enqueueAfterDelay\",\n    value: function enqueueAfterDelay(t, n, e) {\n      var _this49 = this;\n\n      this.Lt(), // Fast-forward delays for timerIds that have been overriden.\n      this.Ot.indexOf(t) > -1 && (n = 0);\n      var r = Lr.createAndSchedule(this, t, n, e, function (t) {\n        return _this49.jt(t);\n      });\n      return this.St.push(r), r;\n    }\n  }, {\n    key: \"Lt\",\n    value: function Lt() {\n      this.Ft && g();\n    }\n  }, {\n    key: \"verifyOperationInProgress\",\n    value: function verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n\n  }, {\n    key: \"Mt\",\n    value: function () {\n      var _Mt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var t;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                t = this.Dt;\n                _context6.next = 3;\n                return t;\n\n              case 3:\n                if (t !== this.Dt) {\n                  _context6.next = 0;\n                  break;\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function Mt() {\n        return _Mt.apply(this, arguments);\n      }\n\n      return Mt;\n    }()\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n\n  }, {\n    key: \"Bt\",\n    value: function Bt(t) {\n      var _iterator11 = _createForOfIteratorHelper(this.St),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var n = _step11.value;\n          if (n.timerId === t) return !0;\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n\n  }, {\n    key: \"zt\",\n    value: function zt(t) {\n      var _this50 = this;\n\n      // Note that draining may generate more delayed ops, so we do that first.\n      return this.Mt().then(function () {\n        // Run ops in the same order they'd run if they ran naturally.\n        _this50.St.sort(function (t, n) {\n          return t.targetTimeMs - n.targetTimeMs;\n        });\n\n        var _iterator12 = _createForOfIteratorHelper(_this50.St),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var n = _step12.value;\n            if (n.skipDelay(), \"all\"\n            /* All */\n            !== t && n.timerId === t) break;\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n\n        return _this50.Mt();\n      });\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n\n  }, {\n    key: \"Gt\",\n    value: function Gt(t) {\n      this.Ot.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */\n\n  }, {\n    key: \"jt\",\n    value: function jt(t) {\n      // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n      var n = this.St.indexOf(t);\n      this.St.splice(n, 1);\n    }\n  }]);\n\n  return Ur;\n}();\n\nvar kr = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function kr(t, n) {\n    _classCallCheck(this, kr);\n\n    this._firestore = t, this._transaction = n, this._dataReader = De(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  _createClass(kr, [{\n    key: \"get\",\n    value: function get(t) {\n      var _this51 = this;\n\n      var n = Fr(t, this._firestore),\n          e = new vr(this._firestore);\n      return this._transaction.lookup([n._key]).then(function (t) {\n        if (!t || 1 !== t.length) return g();\n        var r = t[0];\n        if (r.isFoundDocument()) return new He(_this51._firestore, e, r.key, r, n.converter);\n        if (r.isNoDocument()) return new He(_this51._firestore, e, n._key, null, n.converter);\n        throw g();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(t, n, e) {\n      var r = Fr(t, this._firestore),\n          s = gr(r.converter, n, e),\n          i = Ne(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, e);\n      return this._transaction.set(r._key, i), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, n, e) {\n      var s = Fr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len17 = arguments.length, r = new Array(_len17 > 3 ? _len17 - 3 : 0), _key17 = 3; _key17 < _len17; _key17++) {\n        r[_key17 - 3] = arguments[_key17];\n      }\n\n      return i = \"string\" == typeof (n = getModularInstance(n)) || n instanceof _e ? Le(this._dataReader, \"Transaction.update\", s._key, n, e, r) : Ce(this._dataReader, \"Transaction.update\", s._key, n), this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var n = Fr(t, this._firestore);\n      return this._transaction.delete(n._key), this;\n    }\n  }]);\n\n  return kr;\n}();\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction jr(t, n) {\n  var e = re(t = ot(t, ie)),\n      r = new k();\n  return new Or(new Ur(), e, function (e) {\n    return n(new kr(t, e));\n  }, r).run(), r.promise;\n}\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n\n\n!function (t) {\n  f = t;\n}(\"\".concat(SDK_VERSION, \"_lite\")), _registerComponent(new Component(\"firestore/lite\", function (t, _ref10) {\n  var n = _ref10.options;\n  var e = t.getProvider(\"app\").getImmediate(),\n      r = new ie(e, new z(t.getProvider(\"auth-internal\")), new Y(t.getProvider(\"app-check-internal\")));\n  return n && r._setSettings(n), r;\n}, \"PUBLIC\")), // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.4.3\", \"\"), registerVersion(\"firestore-lite\", \"3.4.3\", \"esm2017\");\nexport { ve as Bytes, fe as CollectionReference, he as DocumentReference, He as DocumentSnapshot, _e as FieldPath, be as FieldValue, ie as Firestore, U as FirestoreError, Ee as GeoPoint, le as Query, tr as QueryConstraint, Ke as QueryDocumentSnapshot, Je as QuerySnapshot, gt as Timestamp, kr as Transaction, Sr as WriteBatch, Rr as addDoc, Nr as arrayRemove, Dr as arrayUnion, de as collection, we as collectionGroup, ce as connectFirestoreEmulator, Ar as deleteDoc, Pr as deleteField, me as doc, ge as documentId, wr as endAt, dr as endBefore, br as getDoc, Er as getDocs, ue as getFirestore, $r as increment, oe as initializeFirestore, ur as limit, cr as limitToLast, ir as orderBy, nr as query, ye as queryEqual, pe as refEqual, jr as runTransaction, Vr as serverTimestamp, Tr as setDoc, w as setLogLevel, Xe as snapshotEqual, lr as startAfter, hr as startAt, ae as terminate, Ir as updateDoc, rr as where, xr as writeBatch };","map":{"version":3,"sources":["/Users/mehulchattopadhyay/Desktop/amazon-clone/amazon/node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"names":["o","u","c","t","a","n","h","s","e","i","r"],"mappings":"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","sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as n, _registerComponent as e, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, createMockUserToken as a, getModularInstance as h } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass l {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ l.UNAUTHENTICATED = new l(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), \nl.MOCK_USER = new l(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet f = \"9.6.3\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst d = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function w(t) {\n    d.setLogLevel(t);\n}\n\nfunction m(t, ...n) {\n    if (d.logLevel <= u.DEBUG) {\n        const e = n.map(_);\n        d.debug(`Firestore (${f}): ${t}`, ...e);\n    }\n}\n\nfunction p(t, ...n) {\n    if (d.logLevel <= u.ERROR) {\n        const e = n.map(_);\n        d.error(`Firestore (${f}): ${t}`, ...e);\n    }\n}\n\n/**\n * @internal\n */ function y(t, ...n) {\n    if (d.logLevel <= u.WARN) {\n        const e = n.map(_);\n        d.warn(`Firestore (${f}): ${t}`, ...e);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function _(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return n = t, JSON.stringify(n);\n    } catch (n) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function g(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const n = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw p(n), new Error(n);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function v(t, n) {\n    t || g();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function b(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nn) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", T = \"cancelled\", I = \"unknown\", A = \"invalid-argument\", R = \"deadline-exceeded\", P = \"not-found\", V = \"already-exists\", D = \"permission-denied\", N = \"unauthenticated\", $ = \"resource-exhausted\", S = \"failed-precondition\", F = \"aborted\", x = \"out-of-range\", q = \"unimplemented\", O = \"internal\", C = \"unavailable\", L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    n) {\n        super(t, n), this.code = t, this.message = n, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class k {\n    constructor() {\n        this.promise = new Promise(((t, n) => {\n            this.resolve = t, this.reject = n;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor(t, n) {\n        this.user = n, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class M {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, n) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => n(l.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, n) {\n        this.changeListener = n, \n        // Fire with initial user.\n        t.enqueueRetryable((() => n(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class z {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (v(\"string\" == typeof t.accessToken), \n        new j(t.accessToken, new l(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, n) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, n, e) {\n        this.type = \"FirstParty\", this.user = l.FIRST_PARTY, this.headers = new Map, this.headers.set(\"X-Goog-AuthUser\", n);\n        const r = t.auth.getAuthHeaderValueForFirstParty([]);\n        r && this.headers.set(\"Authorization\", r), e && this.headers.set(\"X-Goog-Iam-Authorization-Token\", e);\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class Q {\n    constructor(t, n, e) {\n        this.t = t, this.i = n, this.o = e;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n    start(t, n) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => n(l.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass W {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class Y {\n    constructor(t) {\n        this.u = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (v(\"string\" == typeof t.token), \n        new W(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, n) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass H {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, n, e, r, s, i, o, u) {\n        this.databaseId = t, this.appId = n, this.persistenceKey = e, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass K {\n    constructor(t, n) {\n        this.projectId = t, this.database = n || \"(default)\";\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof K && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass J {\n    constructor(t, n, e) {\n        void 0 === n ? n = 0 : n > t.length && g(), void 0 === e ? e = t.length - n : e > t.length - n && g(), \n        this.segments = t, this.offset = n, this.len = e;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === J.comparator(this, t);\n    }\n    child(t) {\n        const n = this.segments.slice(this.offset, this.limit());\n        return t instanceof J ? t.forEach((t => {\n            n.push(t);\n        })) : n.push(t), this.construct(n);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let n = 0; n < this.length; n++) if (this.get(n) !== t.get(n)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let n = 0; n < this.length; n++) if (this.get(n) !== t.get(n)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let n = this.offset, e = this.limit(); n < e; n++) t(this.segments[n]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, n) {\n        const e = Math.min(t.length, n.length);\n        for (let r = 0; r < e; r++) {\n            const e = t.get(r), s = n.get(r);\n            if (e < s) return -1;\n            if (e > s) return 1;\n        }\n        return t.length < n.length ? -1 : t.length > n.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class X extends J {\n    construct(t, n, e) {\n        return new X(t, n, e);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const n = [];\n        for (const e of t) {\n            if (e.indexOf(\"//\") >= 0) throw new U(A, `Invalid segment (${e}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        n.push(...e.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new X(n);\n    }\n    static emptyPath() {\n        return new X([]);\n    }\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class tt extends J {\n    construct(t, n, e) {\n        return new tt(t, n, e);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return Z.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new tt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const n = [];\n        let e = \"\", r = 0;\n        const s = () => {\n            if (0 === e.length) throw new U(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            n.push(e), e = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const n = t[r];\n            if (\"\\\\\" === n) {\n                if (r + 1 === t.length) throw new U(A, \"Path has trailing escape character: \" + t);\n                const n = t[r + 1];\n                if (\"\\\\\" !== n && \".\" !== n && \"`\" !== n) throw new U(A, \"Path has invalid escape sequence: \" + t);\n                e += n, r += 2;\n            } else \"`\" === n ? (i = !i, r++) : \".\" !== n || i ? (e += n, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(A, \"Unterminated ` in path: \" + t);\n        return new tt(n);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class nt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new nt(X.fromString(t));\n    }\n    static fromName(t) {\n        return new nt(X.fromString(t).popFirst(5));\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    isEqual(t) {\n        return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, n) {\n        return X.comparator(t.path, n.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new nt(new X(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function et(t, n, e) {\n    if (!e) throw new U(A, `Function ${t}() cannot be called with an empty ${n}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction rt(t) {\n    if (!nt.isDocumentKey(t)) throw new U(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function st(t) {\n    if (nt.isDocumentKey(t)) throw new U(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction it(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const n = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return n ? `a custom ${n} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nn) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof n)) {\n        if (n.name === t.constructor.name) throw new U(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const e = it(t);\n            throw new U(A, `Expected type '${n.name}', but it was: ${e}`);\n        }\n    }\n    return t;\n}\n\nfunction ut(t, n) {\n    if (n <= 0) throw new U(A, `Function ${t}() requires a positive number, but it was: ${n}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ct(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function at(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ht = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar lt, ft;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction dt(t) {\n    if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return N;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return P;\n\n      case 409:\n        // Conflict\n        return F;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return x;\n\n      case 429:\n        // Too Many Requests\n        return $;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return I;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return q;\n\n      case 503:\n        // Service Unavailable\n        return C;\n\n      case 504:\n        // Gateway Timeout\n        return R;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? O : I;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", \nft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", \nft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", \nft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const n = t.ssl ? \"https\" : \"http\";\n        this.h = n + \"://\" + t.host, this.l = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    m(t, n, e, r, s) {\n        const i = this.p(t, n);\n        m(\"RestConnection\", \"Sending: \", i, e);\n        const o = {};\n        return this.g(o, r, s), this.v(t, i, o, e).then((t => (m(\"RestConnection\", \"Received: \", t), \n        t)), (n => {\n            throw y(\"RestConnection\", `${t} failed with error: `, n, \"url: \", i, \"request:\", e), \n            n;\n        }));\n    }\n    T(t, n, e, r, s) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.m(t, n, e, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    g(t, n, e) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        n && n.headers.forEach(((n, e) => t[e] = n)), e && e.headers.forEach(((n, e) => t[e] = n));\n    }\n    p(t, n) {\n        const e = ht[t];\n        return `${this.h}/v1/${n}:${e}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, n) {\n        super(t), this.I = n;\n    }\n    A(t, n) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async v(t, n, e, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.I(n, {\n                method: \"POST\",\n                headers: e,\n                body: s\n            });\n        } catch (t) {\n            throw new U(dt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new U(dt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction mt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const n = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), e = new Uint8Array(t);\n    if (n && \"function\" == typeof n.getRandomValues) n.getRandomValues(e); else \n    // Falls back to Math.random\n    for (let n = 0; n < t; n++) e[n] = Math.floor(256 * Math.random());\n    return e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class pt {\n    static R() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", n = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let e = \"\";\n        for (;e.length < 20; ) {\n            const r = mt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            e.length < 20 && r[s] < n && (e += t.charAt(r[s] % t.length));\n        }\n        return e;\n    }\n}\n\nfunction yt(t, n) {\n    return t < n ? -1 : t > n ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function _t(t, n, e) {\n    return t.length === n.length && t.every(((t, r) => e(t, n[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass gt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    n) {\n        if (this.seconds = t, this.nanoseconds = n, n < 0) throw new U(A, \"Timestamp nanoseconds out of range: \" + n);\n        if (n >= 1e9) throw new U(A, \"Timestamp nanoseconds out of range: \" + n);\n        if (t < -62135596800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const n = Math.floor(t / 1e3), e = Math.floor(1e6 * (t - 1e3 * n));\n        return new gt(n, e);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class vt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new vt(t);\n    }\n    static min() {\n        return new vt(new gt(0, 0));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let n = 0;\n    for (const e in t) Object.prototype.hasOwnProperty.call(t, e) && n++;\n    return n;\n}\n\nfunction Et(t, n) {\n    for (const e in t) Object.prototype.hasOwnProperty.call(t, e) && n(e, t[e]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass Tt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(tt.comparator);\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const n of this.fields) if (n.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return _t(this.fields, t.fields, ((t, n) => t.isEqual(n)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const n = atob(t);\n        return new It(n);\n    }\n    static fromUint8Array(t) {\n        const n = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let n = \"\";\n            for (let e = 0; e < t.length; ++e) n += String.fromCharCode(t[e]);\n            return n;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(n);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const n = new Uint8Array(t.length);\n            for (let e = 0; e < t.length; e++) n[e] = t.charCodeAt(e);\n            return n;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return yt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst At = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Rt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (v(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let n = 0;\n        const e = At.exec(t);\n        if (v(!!e), e[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = e[1];\n            t = (t + \"000000000\").substr(0, 9), n = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: n\n        };\n    }\n    return {\n        seconds: Pt(t.seconds),\n        nanos: Pt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Pt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Vt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Dt(t) {\n    var n, e;\n    return \"server_timestamp\" === (null === (e = ((null === (n = null == t ? void 0 : t.mapValue) || void 0 === n ? void 0 : n.fields) || {}).__type__) || void 0 === e ? void 0 : e.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const n = t.mapValue.fields.__previous_value__;\n    return Dt(n) ? Nt(n) : n;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function $t(t) {\n    const n = Rt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new gt(n.seconds, n.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Extracts the backend's type order for the provided value. */ function St(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Dt(t) ? 4 /* ServerTimestampValue */ : 10 /* ObjectValue */ : g();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ft(t, n) {\n    if (t === n) return !0;\n    const e = St(t);\n    if (e !== St(n)) return !1;\n    switch (e) {\n      case 0 /* NullValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === n.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return $t(t).isEqual($t(n));\n\n      case 3 /* TimestampValue */ :\n        return function(t, n) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof n.timestampValue && t.timestampValue.length === n.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === n.timestampValue;\n            const e = Rt(t.timestampValue), r = Rt(n.timestampValue);\n            return e.seconds === r.seconds && e.nanos === r.nanos;\n        }(t, n);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === n.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, n) {\n            return Vt(t.bytesValue).isEqual(Vt(n.bytesValue));\n        }(t, n);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === n.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, n) {\n            return Pt(t.geoPointValue.latitude) === Pt(n.geoPointValue.latitude) && Pt(t.geoPointValue.longitude) === Pt(n.geoPointValue.longitude);\n        }(t, n);\n\n      case 2 /* NumberValue */ :\n        return function(t, n) {\n            if (\"integerValue\" in t && \"integerValue\" in n) return Pt(t.integerValue) === Pt(n.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in n) {\n                const e = Pt(t.doubleValue), r = Pt(n.doubleValue);\n                return e === r ? at(e) === at(r) : isNaN(e) && isNaN(r);\n            }\n            return !1;\n        }(t, n);\n\n      case 9 /* ArrayValue */ :\n        return _t(t.arrayValue.values || [], n.arrayValue.values || [], Ft);\n\n      case 10 /* ObjectValue */ :\n        return function(t, n) {\n            const e = t.mapValue.fields || {}, r = n.mapValue.fields || {};\n            if (bt(e) !== bt(r)) return !1;\n            for (const t in e) if (e.hasOwnProperty(t) && (void 0 === r[t] || !Ft(e[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, n);\n\n      default:\n        return g();\n    }\n}\n\nfunction xt(t, n) {\n    return void 0 !== (t.values || []).find((t => Ft(t, n)));\n}\n\nfunction qt(t, n) {\n    if (t === n) return 0;\n    const e = St(t), r = St(n);\n    if (e !== r) return yt(e, r);\n    switch (e) {\n      case 0 /* NullValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return yt(t.booleanValue, n.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, n) {\n            const e = Pt(t.integerValue || t.doubleValue), r = Pt(n.integerValue || n.doubleValue);\n            return e < r ? -1 : e > r ? 1 : e === r ? 0 : \n            // one or both are NaN.\n            isNaN(e) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, n);\n\n      case 3 /* TimestampValue */ :\n        return Ot(t.timestampValue, n.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return Ot($t(t), $t(n));\n\n      case 5 /* StringValue */ :\n        return yt(t.stringValue, n.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, n) {\n            const e = Vt(t), r = Vt(n);\n            return e.compareTo(r);\n        }(t.bytesValue, n.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, n) {\n            const e = t.split(\"/\"), r = n.split(\"/\");\n            for (let t = 0; t < e.length && t < r.length; t++) {\n                const n = yt(e[t], r[t]);\n                if (0 !== n) return n;\n            }\n            return yt(e.length, r.length);\n        }(t.referenceValue, n.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, n) {\n            const e = yt(Pt(t.latitude), Pt(n.latitude));\n            if (0 !== e) return e;\n            return yt(Pt(t.longitude), Pt(n.longitude));\n        }(t.geoPointValue, n.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, n) {\n            const e = t.values || [], r = n.values || [];\n            for (let t = 0; t < e.length && t < r.length; ++t) {\n                const n = qt(e[t], r[t]);\n                if (n) return n;\n            }\n            return yt(e.length, r.length);\n        }(t.arrayValue, n.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, n) {\n            const e = t.fields || {}, r = Object.keys(e), s = n.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const n = yt(r[t], i[t]);\n                if (0 !== n) return n;\n                const o = qt(e[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return yt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, n.mapValue);\n\n      default:\n        throw g();\n    }\n}\n\nfunction Ot(t, n) {\n    if (\"string\" == typeof t && \"string\" == typeof n && t.length === n.length) return yt(t, n);\n    const e = Rt(t), r = Rt(n), s = yt(e.seconds, r.seconds);\n    return 0 !== s ? s : yt(e.nanos, r.nanos);\n}\n\nfunction Ct(t, n) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${n.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Ut(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function kt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Mt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const n = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, e) => n.mapValue.fields[t] = Mt(e))), n;\n    }\n    if (t.arrayValue) {\n        const n = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let e = 0; e < (t.arrayValue.values || []).length; ++e) n.arrayValue.values[e] = Mt(t.arrayValue.values[e]);\n        return n;\n    }\n    return Object.assign({}, t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class Bt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Bt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let n = this.value;\n            for (let e = 0; e < t.length - 1; ++e) if (n = (n.mapValue.fields || {})[t.get(e)], \n            !jt(n)) return null;\n            return n = (n.mapValue.fields || {})[t.lastSegment()], n || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, n) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Mt(n);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let n = tt.emptyPath(), e = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!n.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(n);\n                this.applyChanges(t, e, r), e = {}, r = [], n = s.popLast();\n            }\n            t ? e[s.lastSegment()] = Mt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(n);\n        this.applyChanges(s, e, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const n = this.field(t.popLast());\n        jt(n) && n.mapValue.fields && delete n.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ft(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let n = this.value;\n        n.mapValue.fields || (n.mapValue = {\n            fields: {}\n        });\n        for (let e = 0; e < t.length; ++e) {\n            let r = n.mapValue.fields[t.get(e)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, n.mapValue.fields[t.get(e)] = r), n = r;\n        }\n        return n.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, n, e) {\n        Et(n, ((n, e) => t[n] = e));\n        for (const n of e) delete t[n];\n    }\n    clone() {\n        return new Bt(Mt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class zt {\n    constructor(t, n, e, r, s) {\n        this.key = t, this.documentType = n, this.version = e, this.data = r, this.documentState = s;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new zt(t, 0 /* INVALID */ , vt.min(), Bt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, n, e) {\n        return new zt(t, 1 /* FOUND_DOCUMENT */ , n, e, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, n) {\n        return new zt(t, 2 /* NO_DOCUMENT */ , n, Bt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, n) {\n        return new zt(t, 3 /* UNKNOWN_DOCUMENT */ , n, Bt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, n) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = n, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Bt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Bt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof zt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new zt(this.key, this.documentType, this.version, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Gt {\n    constructor(t, n = null, e = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = n, this.orderBy = e, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.P = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Qt(t, n = null, e = [], r = [], s = null, i = null, o = null) {\n    return new Gt(t, n, e, r, s, i, o);\n}\n\nclass Wt extends class {} {\n    constructor(t, n, e) {\n        super(), this.field = t, this.op = n, this.value = e;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, n, e) {\n        return t.isKeyField() ? \"in\" /* IN */ === n || \"not-in\" /* NOT_IN */ === n ? this.V(t, n, e) : new Yt(t, n, e) : \"array-contains\" /* ARRAY_CONTAINS */ === n ? new Xt(t, e) : \"in\" /* IN */ === n ? new Zt(t, e) : \"not-in\" /* NOT_IN */ === n ? new tn(t, e) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === n ? new nn(t, e) : new Wt(t, n, e);\n    }\n    static V(t, n, e) {\n        return \"in\" /* IN */ === n ? new Ht(t, e) : new Kt(t, e);\n    }\n    matches(t) {\n        const n = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== n && this.D(qt(n, this.value)) : null !== n && St(this.value) === St(n) && this.D(qt(n, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    D(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return g();\n        }\n    }\n    N() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass Yt extends Wt {\n    constructor(t, n, e) {\n        super(t, n, e), this.key = nt.fromName(e.referenceValue);\n    }\n    matches(t) {\n        const n = nt.comparator(t.key, this.key);\n        return this.D(n);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Ht extends Wt {\n    constructor(t, n) {\n        super(t, \"in\" /* IN */ , n), this.keys = Jt(\"in\" /* IN */ , n);\n    }\n    matches(t) {\n        return this.keys.some((n => n.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Kt extends Wt {\n    constructor(t, n) {\n        super(t, \"not-in\" /* NOT_IN */ , n), this.keys = Jt(\"not-in\" /* NOT_IN */ , n);\n    }\n    matches(t) {\n        return !this.keys.some((n => n.isEqual(t.key)));\n    }\n}\n\nfunction Jt(t, n) {\n    var e;\n    return ((null === (e = n.arrayValue) || void 0 === e ? void 0 : e.values) || []).map((t => nt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class Xt extends Wt {\n    constructor(t, n) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , n);\n    }\n    matches(t) {\n        const n = t.data.field(this.field);\n        return Lt(n) && xt(n.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class Zt extends Wt {\n    constructor(t, n) {\n        super(t, \"in\" /* IN */ , n);\n    }\n    matches(t) {\n        const n = t.data.field(this.field);\n        return null !== n && xt(this.value.arrayValue, n);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class tn extends Wt {\n    constructor(t, n) {\n        super(t, \"not-in\" /* NOT_IN */ , n);\n    }\n    matches(t) {\n        if (xt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const n = t.data.field(this.field);\n        return null !== n && !xt(this.value.arrayValue, n);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class nn extends Wt {\n    constructor(t, n) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , n);\n    }\n    matches(t) {\n        const n = t.data.field(this.field);\n        return !(!Lt(n) || !n.arrayValue.values) && n.arrayValue.values.some((t => xt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class en {\n    constructor(t, n) {\n        this.position = t, this.before = n;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class rn {\n    constructor(t, n = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = n;\n    }\n}\n\nfunction sn(t, n) {\n    return t.dir === n.dir && t.field.isEqual(n.field);\n}\n\nfunction on(t, n) {\n    if (null === t) return null === n;\n    if (null === n) return !1;\n    if (t.before !== n.before || t.position.length !== n.position.length) return !1;\n    for (let e = 0; e < t.position.length; e++) {\n        if (!Ft(t.position[e], n.position[e])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class un {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, n = null, e = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = n, this.explicitOrderBy = e, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.$ = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.S = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function cn(t) {\n    return !ct(t.limit) && \"L\" /* Last */ === t.limitType;\n}\n\nfunction an(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction hn(t) {\n    for (const n of t.filters) if (n.N()) return n.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ln(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function fn(t) {\n    const n = b(t);\n    if (null === n.$) {\n        n.$ = [];\n        const t = hn(n), e = an(n);\n        if (null !== t && null === e) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || n.$.push(new rn(t)), n.$.push(new rn(tt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const e of n.explicitOrderBy) n.$.push(e), e.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = n.explicitOrderBy.length > 0 ? n.explicitOrderBy[n.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                n.$.push(new rn(tt.keyField(), t));\n            }\n        }\n    }\n    return n.$;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function dn(t) {\n    const n = b(t);\n    if (!n.S) if (\"F\" /* First */ === n.limitType) n.S = Qt(n.path, n.collectionGroup, fn(n), n.filters, n.limit, n.startAt, n.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const e of fn(n)) {\n            const n = \"desc\" /* DESCENDING */ === e.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new rn(e.field, n));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const e = n.endAt ? new en(n.endAt.position, !n.endAt.before) : null, r = n.startAt ? new en(n.startAt.position, !n.startAt.before) : null;\n        // Now return as a LimitType.First query.\n        n.S = Qt(n.path, n.collectionGroup, t, n.filters, n.limit, e, r);\n    }\n    return n.S;\n}\n\nfunction wn(t, n) {\n    return function(t, n) {\n        if (t.limit !== n.limit) return !1;\n        if (t.orderBy.length !== n.orderBy.length) return !1;\n        for (let e = 0; e < t.orderBy.length; e++) if (!sn(t.orderBy[e], n.orderBy[e])) return !1;\n        if (t.filters.length !== n.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (e = t.filters[s], r = n.filters[s], \n        e.op !== r.op || !e.field.isEqual(r.field) || !Ft(e.value, r.value)) return !1;\n        var e, r;\n        return t.collectionGroup === n.collectionGroup && !!t.path.isEqual(n.path) && !!on(t.startAt, n.startAt) && on(t.endAt, n.endAt);\n    }(dn(t), dn(n)) && t.limitType === n.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction mn(t, n) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(n) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(n) : function(t, n) {\n        if (t.F) {\n            if (isNaN(n)) return {\n                doubleValue: \"NaN\"\n            };\n            if (n === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (n === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: at(n) ? \"-0\" : n\n        };\n    }(t, n);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class pn {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class yn extends pn {}\n\n/** Transforms an array value via a union operation. */ class _n extends pn {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class gn extends pn {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class vn extends pn {\n    constructor(t, n) {\n        super(), this.q = t, this.O = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class bn {\n    constructor(t, n) {\n        this.field = t, this.transform = n;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class En {\n    constructor(t, n) {\n        this.updateTime = t, this.exists = n;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new En;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new En(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new En(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Tn {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class In extends Tn {\n    constructor(t, n, e, r = []) {\n        super(), this.key = t, this.value = n, this.precondition = e, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class An extends Tn {\n    constructor(t, n, e, r, s = []) {\n        super(), this.key = t, this.data = n, this.fieldMask = e, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Rn extends Tn {\n    constructor(t, n) {\n        super(), this.key = t, this.precondition = n, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Pn extends Tn {\n    constructor(t, n) {\n        super(), this.key = t, this.precondition = n, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Vn = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Dn = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Nn {\n    constructor(t, n) {\n        this.databaseId = t, this.F = n;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction $n(t, n) {\n    if (t.F) {\n        return `${new Date(1e3 * n.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + n.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + n.seconds,\n        nanos: n.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Sn(t, n) {\n    return t.F ? n.toBase64() : n.toUint8Array();\n}\n\nfunction Fn(t, n) {\n    return $n(t, n.toTimestamp());\n}\n\nfunction xn(t) {\n    return v(!!t), vt.fromTimestamp(function(t) {\n        const n = Rt(t);\n        return new gt(n.seconds, n.nanos);\n    }(t));\n}\n\nfunction qn(t, n) {\n    return function(t) {\n        return new X([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(n).canonicalString();\n}\n\nfunction On(t, n) {\n    return qn(t.databaseId, n.path);\n}\n\nfunction Cn(t, n) {\n    const e = function(t) {\n        const n = X.fromString(t);\n        return v(Hn(n)), n;\n    }(n);\n    if (e.get(1) !== t.databaseId.projectId) throw new U(A, \"Tried to deserialize key from different project: \" + e.get(1) + \" vs \" + t.databaseId.projectId);\n    if (e.get(3) !== t.databaseId.database) throw new U(A, \"Tried to deserialize key from different database: \" + e.get(3) + \" vs \" + t.databaseId.database);\n    return new nt((v((r = e).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ln(t, n) {\n    return qn(t.databaseId, n);\n}\n\nfunction Un(t) {\n    return new X([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction kn(t, n, e) {\n    return {\n        name: On(t, n),\n        fields: e.value.mapValue.fields\n    };\n}\n\nfunction jn(t, n) {\n    return \"found\" in n ? function(t, n) {\n        v(!!n.found), n.found.name, n.found.updateTime;\n        const e = Cn(t, n.found.name), r = xn(n.found.updateTime), s = new Bt({\n            mapValue: {\n                fields: n.found.fields\n            }\n        });\n        return zt.newFoundDocument(e, r, s);\n    }(t, n) : \"missing\" in n ? function(t, n) {\n        v(!!n.missing), v(!!n.readTime);\n        const e = Cn(t, n.missing), r = xn(n.readTime);\n        return zt.newNoDocument(e, r);\n    }(t, n) : g();\n}\n\nfunction Mn(t, n) {\n    let e;\n    if (n instanceof In) e = {\n        update: kn(t, n.key, n.value)\n    }; else if (n instanceof Rn) e = {\n        delete: On(t, n.key)\n    }; else if (n instanceof An) e = {\n        update: kn(t, n.key, n.data),\n        updateMask: Yn(n.fieldMask)\n    }; else {\n        if (!(n instanceof Pn)) return g();\n        e = {\n            verify: On(t, n.key)\n        };\n    }\n    return n.fieldTransforms.length > 0 && (e.updateTransforms = n.fieldTransforms.map((t => function(t, n) {\n        const e = n.transform;\n        if (e instanceof yn) return {\n            fieldPath: n.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (e instanceof _n) return {\n            fieldPath: n.field.canonicalString(),\n            appendMissingElements: {\n                values: e.elements\n            }\n        };\n        if (e instanceof gn) return {\n            fieldPath: n.field.canonicalString(),\n            removeAllFromArray: {\n                values: e.elements\n            }\n        };\n        if (e instanceof vn) return {\n            fieldPath: n.field.canonicalString(),\n            increment: e.O\n        };\n        throw g();\n    }(0, t)))), n.precondition.isNone || (e.currentDocument = function(t, n) {\n        return void 0 !== n.updateTime ? {\n            updateTime: Fn(t, n.updateTime)\n        } : void 0 !== n.exists ? {\n            exists: n.exists\n        } : g();\n    }(t, n.precondition)), e;\n}\n\nfunction Bn(t, n) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const e = {\n        structuredQuery: {}\n    }, r = n.path;\n    null !== n.collectionGroup ? (e.parent = Ln(t, r), e.structuredQuery.from = [ {\n        collectionId: n.collectionGroup,\n        allDescendants: !0\n    } ]) : (e.parent = Ln(t, r.popLast()), e.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const n = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (kt(t.value)) return {\n                    unaryFilter: {\n                        field: Wn(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Ut(t.value)) return {\n                    unaryFilter: {\n                        field: Wn(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (kt(t.value)) return {\n                    unaryFilter: {\n                        field: Wn(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Ut(t.value)) return {\n                    unaryFilter: {\n                        field: Wn(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: Wn(t.field),\n                    op: Qn(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === n.length) return n[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: n\n            }\n        };\n    }(n.filters);\n    s && (e.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: Wn(t.field),\n                direction: Gn(t.dir)\n            };\n        }(t)));\n    }(n.orderBy);\n    i && (e.structuredQuery.orderBy = i);\n    const o = function(t, n) {\n        return t.F || ct(n) ? n : {\n            value: n\n        };\n    }(t, n.limit);\n    return null !== o && (e.structuredQuery.limit = o), n.startAt && (e.structuredQuery.startAt = zn(n.startAt)), \n    n.endAt && (e.structuredQuery.endAt = zn(n.endAt)), e;\n}\n\nfunction zn(t) {\n    return {\n        before: t.before,\n        values: t.position\n    };\n}\n\n// visible for testing\nfunction Gn(t) {\n    return Vn[t];\n}\n\n// visible for testing\nfunction Qn(t) {\n    return Dn[t];\n}\n\nfunction Wn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Yn(t) {\n    const n = [];\n    return t.fields.forEach((t => n.push(t.canonicalString()))), {\n        fieldPaths: n\n    };\n}\n\nfunction Hn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Kn(t) {\n    return new Nn(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass Jn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    n, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    e = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.C = t, this.timerId = n, this.L = e, this.U = r, this.k = s, this.j = 0, this.M = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.B = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    G() {\n        this.j = this.k;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    W(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const n = Math.floor(this.j + this.Y()), e = Math.max(0, Date.now() - this.B), r = Math.max(0, n - e);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${n} ms, last attempt: ${e} ms ago)`), \n        this.M = this.C.enqueueAfterDelay(this.timerId, r, (() => (this.B = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.j *= this.U, this.j < this.L && (this.j = this.L), this.j > this.k && (this.j = this.k);\n    }\n    H() {\n        null !== this.M && (this.M.skipDelay(), this.M = null);\n    }\n    cancel() {\n        null !== this.M && (this.M.cancel(), this.M = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    Y() {\n        return (Math.random() - .5) * this.j;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass Xn extends class {} {\n    constructor(t, n, e, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = n, this.K = e, this.q = r, \n        this.J = !1;\n    }\n    X() {\n        if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    m(t, n, e) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.K.m(t, n, e, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === N && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    T(t, n, e) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.K.T(t, n, e, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === N && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n        }));\n    }\n    terminate() {\n        this.J = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function Zn(t, n) {\n    const e = b(t), r = Un(e.q) + \"/documents\", s = {\n        writes: n.map((t => Mn(e.q, t)))\n    };\n    await e.m(\"Commit\", r, s);\n}\n\nasync function te(t, n) {\n    const e = b(t), r = Un(e.q) + \"/documents\", s = {\n        documents: n.map((t => On(e.q, t)))\n    }, i = await e.T(\"BatchGetDocuments\", r, s), o = new Map;\n    i.forEach((t => {\n        const n = jn(e.q, t);\n        o.set(n.key.toString(), n);\n    }));\n    const u = [];\n    return n.forEach((t => {\n        const n = o.get(t.toString());\n        v(!!n), u.push(n);\n    })), u;\n}\n\nasync function ne(t, n) {\n    const e = b(t), r = Bn(e.q, dn(n));\n    return (await e.T(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, n, e) {\n        const r = Cn(t, n.name), s = xn(n.updateTime), i = new Bt({\n            mapValue: {\n                fields: n.fields\n            }\n        }), o = zt.newFoundDocument(r, s, i);\n        return e && o.setHasCommittedMutations(), e ? o.setHasCommittedMutations() : o;\n    }(e.q, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ee = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction re(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!ee.has(t)) {\n        m(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new wt(t, fetch.bind(null));\n        }((n = t._databaseId, e = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new H(n, e, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Kn(t._databaseId), u = function(t, n, e, r) {\n            return new Xn(t, n, e, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        ee.set(t, u);\n    }\n    var n, e, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return ee.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass se {\n    constructor(t) {\n        var n;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(A, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (n = t.ssl) || void 0 === n || n;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(A, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, n, e, r) {\n            if (!0 === n && !0 === r) throw new U(A, `${t} and ${e} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class ie {\n    /** @hideconstructor */\n    constructor(t, n, e) {\n        this._authCredentials = n, this._appCheckCredentials = e, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new se({}), \n        this._settingsFrozen = !1, t instanceof K ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(A, '\"projectId\" not provided in firebase.initializeApp.');\n            return new K(t.options.projectId);\n        }\n        /**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new se(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new M;\n            switch (t.type) {\n              case \"gapi\":\n                const n = t.client;\n                // Make sure this really is a Gapi client.\n                                return v(!(\"object\" != typeof n || null === n || !n.auth || !n.auth.getAuthHeaderValueForFirstParty)), \n                new Q(n, t.sessionIndex || \"0\", t.iamToken || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const n = ee.get(t);\n            n && (m(\"ComponentProvider\", \"Removing Datastore\"), ee.delete(t), n.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction oe(t, n) {\n    const e = _getProvider(t, \"firestore/lite\");\n    if (e.isInitialized()) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return e.initialize({\n        options: n\n    });\n}\n\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */ function ue(n = t()) {\n    return _getProvider(n, \"firestore/lite\").getImmediate();\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function ce(t, n, e, r = {}) {\n    var s;\n    const i = (t = ot(t, ie))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== n && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${n}:${e}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let n, e;\n        if (\"string\" == typeof r.mockUserToken) n = r.mockUserToken, e = l.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            n = a(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            e = new l(i);\n        }\n        t._authCredentials = new B(new j(n, e));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function ae(t) {\n    return t = ot(t, ie), n(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass he {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    n, e) {\n        this.converter = n, this._key = e, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new fe(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new he(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class le {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    n, e) {\n        this.converter = n, this._query = e, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new le(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class fe extends le {\n    /** @hideconstructor */\n    constructor(t, n, e) {\n        super(t, n, new un(e)), this._path = e, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new he(this.firestore, \n        /* converter= */ null, new nt(t));\n    }\n    withConverter(t) {\n        return new fe(this.firestore, t, this._path);\n    }\n}\n\nfunction de(t, n, ...e) {\n    if (t = h(t), et(\"collection\", \"path\", n), t instanceof ie) {\n        const r = X.fromString(n, ...e);\n        return st(r), new fe(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof he || t instanceof fe)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(n, ...e));\n        return st(r), new fe(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function we(t, n) {\n    if (t = ot(t, ie), et(\"collectionGroup\", \"collection id\", n), n.indexOf(\"/\") >= 0) throw new U(A, `Invalid collection ID '${n}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new le(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new un(X.emptyPath(), t);\n    }(n));\n}\n\nfunction me(t, n, ...e) {\n    if (t = h(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (n = pt.R()), et(\"doc\", \"path\", n), t instanceof ie) {\n        const r = X.fromString(n, ...e);\n        return rt(r), new he(t, \n        /* converter= */ null, new nt(r));\n    }\n    {\n        if (!(t instanceof he || t instanceof fe)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(n, ...e));\n        return rt(r), new he(t.firestore, t instanceof fe ? t.converter : null, new nt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function pe(t, n) {\n    return t = h(t), n = h(n), (t instanceof he || t instanceof fe) && (n instanceof he || n instanceof fe) && (t.firestore === n.firestore && t.path === n.path && t.converter === n.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function ye(t, n) {\n    return t = h(t), n = h(n), t instanceof le && n instanceof le && (t.firestore === n.firestore && wn(t._query, n._query) && t.converter === n.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class _e {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let n = 0; n < t.length; ++n) if (0 === t[n].length) throw new U(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new tt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function ge() {\n    return new _e(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class ve {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new ve(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(A, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new ve(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class be {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ee {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, n) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(n) || n < -180 || n > 180) throw new U(A, \"Longitude must be a number between -180 and 180, but was: \" + n);\n        this._lat = t, this._long = n;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Te = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Ie {\n    constructor(t, n, e) {\n        this.data = t, this.fieldMask = n, this.fieldTransforms = e;\n    }\n    toMutation(t, n) {\n        return null !== this.fieldMask ? new An(t, this.data, this.fieldMask, n, this.fieldTransforms) : new In(t, this.data, n, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Ae {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    n, e) {\n        this.data = t, this.fieldMask = n, this.fieldTransforms = e;\n    }\n    toMutation(t, n) {\n        return new An(t, this.data, this.fieldMask, n, this.fieldTransforms);\n    }\n}\n\nfunction Re(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw g();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Pe {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, n, e, r, s, i) {\n        this.settings = t, this.databaseId = n, this.q = e, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get tt() {\n        return this.settings.tt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    nt(t) {\n        return new Pe(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.q, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    et(t) {\n        var n;\n        const e = null === (n = this.path) || void 0 === n ? void 0 : n.child(t), r = this.nt({\n            path: e,\n            rt: !1\n        });\n        return r.st(t), r;\n    }\n    it(t) {\n        var n;\n        const e = null === (n = this.path) || void 0 === n ? void 0 : n.child(t), r = this.nt({\n            path: e,\n            rt: !1\n        });\n        return r.Z(), r;\n    }\n    ot(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.nt({\n            path: void 0,\n            rt: !0\n        });\n    }\n    ut(t) {\n        return We(t, this.settings.methodName, this.settings.ct || !1, this.path, this.settings.at);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((n => t.isPrefixOf(n))) || void 0 !== this.fieldTransforms.find((n => t.isPrefixOf(n.field)));\n    }\n    Z() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.st(this.path.get(t));\n    }\n    st(t) {\n        if (0 === t.length) throw this.ut(\"Document fields must not be empty\");\n        if (Re(this.tt) && Te.test(t)) throw this.ut('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Ve {\n    constructor(t, n, e) {\n        this.databaseId = t, this.ignoreUndefinedProperties = n, this.q = e || Kn(t);\n    }\n    /** Creates a new top-level parse context. */    ht(t, n, e, r = !1) {\n        return new Pe({\n            tt: t,\n            methodName: n,\n            at: e,\n            path: tt.emptyPath(),\n            rt: !1,\n            ct: r\n        }, this.databaseId, this.q, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction De(t) {\n    const n = t._freezeSettings(), e = Kn(t._databaseId);\n    return new Ve(t._databaseId, !!n.ignoreUndefinedProperties, e);\n}\n\n/** Parse document data from a set() call. */ function Ne(t, n, e, r, s, i = {}) {\n    const o = t.ht(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , n, e, s);\n    Be(\"Data must be an object, but it was:\", o, r);\n    const u = je(r, o);\n    let c, a;\n    if (i.merge) c = new Tt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ze(n, r, e);\n            if (!o.contains(s)) throw new U(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            Ye(t, s) || t.push(s);\n        }\n        c = new Tt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Ie(new Bt(u), c, a);\n}\n\nclass $e extends be {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.tt) throw 1 /* Update */ === t.tt ? t.ut(`${this._methodName}() can only appear at the top level of your update data`) : t.ut(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof $e;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Se(t, n, e) {\n    return new Pe({\n        tt: 3 /* Argument */ ,\n        at: n.settings.at,\n        methodName: t._methodName,\n        rt: e\n    }, n.databaseId, n.q, n.ignoreUndefinedProperties);\n}\n\nclass Fe extends be {\n    _toFieldTransform(t) {\n        return new bn(t.path, new yn);\n    }\n    isEqual(t) {\n        return t instanceof Fe;\n    }\n}\n\nclass xe extends be {\n    constructor(t, n) {\n        super(t), this.lt = n;\n    }\n    _toFieldTransform(t) {\n        const n = Se(this, t, \n        /*array=*/ !0), e = this.lt.map((t => ke(t, n))), r = new _n(e);\n        return new bn(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass qe extends be {\n    constructor(t, n) {\n        super(t), this.lt = n;\n    }\n    _toFieldTransform(t) {\n        const n = Se(this, t, \n        /*array=*/ !0), e = this.lt.map((t => ke(t, n))), r = new gn(e);\n        return new bn(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Oe extends be {\n    constructor(t, n) {\n        super(t), this.ft = n;\n    }\n    _toFieldTransform(t) {\n        const n = new vn(t.q, mn(t.q, this.ft));\n        return new bn(t.path, n);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function Ce(t, n, e, r) {\n    const s = t.ht(1 /* Update */ , n, e);\n    Be(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Bt.empty();\n    Et(r, ((t, r) => {\n        const u = Qe(n, t, e);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = h(r);\n        const c = s.it(u);\n        if (r instanceof $e) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = ke(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Tt(i);\n    return new Ae(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function Le(t, n, e, r, s, i) {\n    const o = t.ht(1 /* Update */ , n, e), u = [ ze(n, r, e) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(A, `Function ${n}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ze(n, i[t])), c.push(i[t + 1]);\n    const a = [], l = Bt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!Ye(a, u[t])) {\n        const n = u[t];\n        let e = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                e = h(e);\n        const r = o.it(n);\n        if (e instanceof $e) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(n); else {\n            const t = ke(e, r);\n            null != t && (a.push(n), l.set(n, t));\n        }\n    }\n    const f = new Tt(a);\n    return new Ae(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Ue(t, n, e, r = !1) {\n    return ke(e, t.ht(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , n));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function ke(t, n) {\n    if (Me(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = h(t))) return Be(\"Unsupported field value:\", n, t), je(t, n);\n    if (t instanceof be) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, n) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Re(n.tt)) throw n.ut(`${t._methodName}() can only be used with update() and set()`);\n        if (!n.path) throw n.ut(`${t._methodName}() is not currently supported inside arrays`);\n        const e = t._toFieldTransform(n);\n        e && n.fieldTransforms.push(e);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, n), null;\n    if (void 0 === t && n.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    n.path && n.fieldMask.push(n.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (n.settings.rt && 4 /* ArrayArgument */ !== n.tt) throw n.ut(\"Nested arrays are not supported\");\n        return function(t, n) {\n            const e = [];\n            let r = 0;\n            for (const s of t) {\n                let t = ke(s, n.ot(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), e.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: e\n                }\n            };\n        }(t, n);\n    }\n    return function(t, n) {\n        if (null === (t = h(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return mn(n.q, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const e = gt.fromDate(t);\n            return {\n                timestampValue: $n(n.q, e)\n            };\n        }\n        if (t instanceof gt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const e = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: $n(n.q, e)\n            };\n        }\n        if (t instanceof Ee) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof ve) return {\n            bytesValue: Sn(n.q, t._byteString)\n        };\n        if (t instanceof he) {\n            const e = n.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(e)) throw n.ut(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${e.projectId}/${e.database}`);\n            return {\n                referenceValue: qn(t.firestore._databaseId || n.databaseId, t._key.path)\n            };\n        }\n        throw n.ut(`Unsupported field value: ${it(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, n);\n}\n\nfunction je(t, n) {\n    const e = {};\n    return !function(t) {\n        for (const n in t) if (Object.prototype.hasOwnProperty.call(t, n)) return !1;\n        return !0;\n    }(t) ? Et(t, ((t, r) => {\n        const s = ke(r, n.et(t));\n        null != s && (e[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    n.path && n.path.length > 0 && n.fieldMask.push(n.path), {\n        mapValue: {\n            fields: e\n        }\n    };\n}\n\nfunction Me(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof Ee || t instanceof ve || t instanceof he || t instanceof be);\n}\n\nfunction Be(t, n, e) {\n    if (!Me(e) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(e)) {\n        const r = it(e);\n        throw \"an object\" === r ? n.ut(t + \" a custom object\") : n.ut(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ze(t, n, e) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    n = h(n)) instanceof _e) return n._internalPath;\n    if (\"string\" == typeof n) return Qe(t, n);\n    throw We(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, e);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const Ge = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Qe(t, n, e) {\n    if (n.search(Ge) >= 0) throw We(`Invalid field path (${n}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, e);\n    try {\n        return new _e(...n.split(\".\"))._internalPath;\n    } catch (r) {\n        throw We(`Invalid field path (${n}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, e);\n    }\n}\n\nfunction We(t, n, e, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${n}() called with invalid data`;\n    e && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(A, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function Ye(t, n) {\n    return t.some((t => t.isEqual(n)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class He {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, n, e, r, s) {\n        this._firestore = t, this._userDataWriter = n, this._key = e, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new he(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new Ke(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const n = this._document.data.field(Ze(\"DocumentSnapshot.get\", t));\n            if (null !== n) return this._userDataWriter.convertValue(n);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class Ke extends He {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class Je {\n    /** @hideconstructor */\n    constructor(t, n) {\n        this._docs = n, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, n) {\n        this._docs.forEach(t, n);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function Xe(t, n) {\n    return t = h(t), n = h(n), t instanceof He && n instanceof He ? t._firestore === n._firestore && t._key.isEqual(n._key) && (null === t._document ? null === n._document : t._document.isEqual(n._document)) && t._converter === n._converter : t instanceof Je && n instanceof Je && (ye(t.query, n.query) && _t(t.docs, n.docs, Xe));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function Ze(t, n) {\n    return \"string\" == typeof n ? Qe(t, n) : n instanceof _e ? n._internalPath : n._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass tr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function nr(t, ...n) {\n    for (const e of n) t = e._apply(t);\n    return t;\n}\n\nclass er extends tr {\n    constructor(t, n, e) {\n        super(), this.dt = t, this.wt = n, this.yt = e, this.type = \"where\";\n    }\n    _apply(t) {\n        const n = De(t.firestore), e = function(t, n, e, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new U(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    yr(o, i);\n                    const n = [];\n                    for (const e of o) n.push(pr(r, t, e));\n                    u = {\n                        arrayValue: {\n                            values: n\n                        }\n                    };\n                } else u = pr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || yr(o, i), \n            u = Ue(e, n, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = Wt.create(s, i, u);\n            return function(t, n) {\n                if (n.N()) {\n                    const e = hn(t);\n                    if (null !== e && !e.isEqual(n.field)) throw new U(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${e.toString()}' and '${n.field.toString()}'`);\n                    const r = an(t);\n                    null !== r && _r(t, n.field, r);\n                }\n                const e = function(t, n) {\n                    for (const e of t.filters) if (n.indexOf(e.op) >= 0) return e.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(n.op));\n                if (null !== e) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw e === n.op ? new U(A, `Invalid query. You cannot use more than one '${n.op.toString()}' filter.`) : new U(A, `Invalid query. You cannot use '${n.op.toString()}' filters with '${e.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", n, t.firestore._databaseId, this.dt, this.wt, this.yt);\n        return new le(t.firestore, t.converter, function(t, n) {\n            const e = t.filters.concat([ n ]);\n            return new un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), e, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function rr(t, n, e) {\n    const r = n, s = Ze(\"where\", t);\n    return new er(s, r, e);\n}\n\nclass sr extends tr {\n    constructor(t, n) {\n        super(), this.dt = t, this._t = n, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const n = function(t, n, e) {\n            if (null !== t.startAt) throw new U(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new rn(n, e);\n            return function(t, n) {\n                if (null === an(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const e = hn(t);\n                    null !== e && _r(t, e, n.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this.dt, this._t);\n        return new le(t.firestore, t.converter, function(t, n) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const e = t.explicitOrderBy.concat([ n ]);\n            return new un(t.path, t.collectionGroup, e, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function ir(t, n = \"asc\") {\n    const e = n, r = Ze(\"orderBy\", t);\n    return new sr(r, e);\n}\n\nclass or extends tr {\n    constructor(t, n, e) {\n        super(), this.type = t, this.gt = n, this.vt = e;\n    }\n    _apply(t) {\n        return new le(t.firestore, t.converter, function(t, n, e) {\n            return new un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), n, e, t.startAt, t.endAt);\n        }(t._query, this.gt, this.vt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function ur(t) {\n    return ut(\"limit\", t), new or(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function cr(t) {\n    return ut(\"limitToLast\", t), new or(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass ar extends tr {\n    constructor(t, n, e) {\n        super(), this.type = t, this.bt = n, this.Et = e;\n    }\n    _apply(t) {\n        const n = mr(t, this.type, this.bt, this.Et);\n        return new le(t.firestore, t.converter, function(t, n) {\n            return new un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, n, t.endAt);\n        }(t._query, n));\n    }\n}\n\nfunction hr(...t) {\n    return new ar(\"startAt\", t, /*before=*/ !0);\n}\n\nfunction lr(...t) {\n    return new ar(\"startAfter\", t, \n    /*before=*/ !1);\n}\n\nclass fr extends tr {\n    constructor(t, n, e) {\n        super(), this.type = t, this.bt = n, this.Et = e;\n    }\n    _apply(t) {\n        const n = mr(t, this.type, this.bt, this.Et);\n        return new le(t.firestore, t.converter, function(t, n) {\n            return new un(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, n);\n        }(t._query, n));\n    }\n}\n\nfunction dr(...t) {\n    return new fr(\"endBefore\", t, /*before=*/ !0);\n}\n\nfunction wr(...t) {\n    return new fr(\"endAt\", t, /*before=*/ !1);\n}\n\n/** Helper function to create a bound from a document or fields */ function mr(t, n, e, r) {\n    if (e[0] = h(e[0]), e[0] instanceof He) return function(t, n, e, r, s) {\n        if (!r) throw new U(P, `Can't use a DocumentSnapshot that doesn't exist for ${e}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const e of fn(t)) if (e.field.isKeyField()) i.push(Ct(n, r.key)); else {\n            const t = r.data.field(e.field);\n            if (Dt(t)) throw new U(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + e.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = e.field.canonicalString();\n                throw new U(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new en(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, n, e[0]._document, r);\n    {\n        const s = De(t.firestore);\n        return function(t, n, e, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ln(t) && -1 !== c.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const e = t.path.child(X.fromString(c));\n                    if (!nt.isDocumentKey(e)) throw new U(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${e}' is not because it contains an odd number of segments.`);\n                    const s = new nt(e);\n                    u.push(Ct(n, s));\n                } else {\n                    const t = Ue(e, r, c);\n                    u.push(t);\n                }\n            }\n            return new en(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, n, e, r);\n    }\n}\n\nfunction pr(t, n, e) {\n    if (\"string\" == typeof (e = h(e))) {\n        if (\"\" === e) throw new U(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ln(n) && -1 !== e.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${e}' contains a '/' character.`);\n        const r = n.path.child(X.fromString(e));\n        if (!nt.isDocumentKey(r)) throw new U(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new nt(r));\n    }\n    if (e instanceof he) return Ct(t, e._key);\n    throw new U(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(e)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function yr(t, n) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(A, `Invalid Query. A non-empty array is required for '${n.toString()}' filters.`);\n    if (t.length > 10) throw new U(A, `Invalid Query. '${n.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction _r(t, n, e) {\n    if (!e.isEqual(n)) throw new U(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${n.toString()}' and so you must also use '${n.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${e.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction gr(t, n, e) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? e && (e.merge || e.mergeFields) ? t.toFirestore(n, e) : t.toFirestore(n) : n, \n    r;\n}\n\nclass vr extends class {\n    convertValue(t, n = \"none\") {\n        switch (St(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return Pt(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, n);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(Vt(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, n);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, n);\n\n          default:\n            throw g();\n        }\n    }\n    convertObject(t, n) {\n        const e = {};\n        return Et(t.fields, ((t, r) => {\n            e[t] = this.convertValue(r, n);\n        })), e;\n    }\n    convertGeoPoint(t) {\n        return new Ee(Pt(t.latitude), Pt(t.longitude));\n    }\n    convertArray(t, n) {\n        return (t.values || []).map((t => this.convertValue(t, n)));\n    }\n    convertServerTimestamp(t, n) {\n        switch (n) {\n          case \"previous\":\n            const e = Nt(t);\n            return null == e ? null : this.convertValue(e, n);\n\n          case \"estimate\":\n            return this.convertTimestamp($t(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const n = Rt(t);\n        return new gt(n.seconds, n.nanos);\n    }\n    convertDocumentKey(t, n) {\n        const e = X.fromString(t);\n        v(Hn(e));\n        const r = new K(e.get(1), e.get(3)), s = new nt(e.popFirst(5));\n        return r.isEqual(n) || \n        // TODO(b/64130202): Somehow support foreign references.\n        p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${n.projectId}/${n.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new ve(t);\n    }\n    convertReference(t) {\n        const n = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new he(this.firestore, /* converter= */ null, n);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function br(t) {\n    const n = re((t = ot(t, he)).firestore), e = new vr(t.firestore);\n    return te(n, [ t._key ]).then((n => {\n        v(1 === n.length);\n        const r = n[0];\n        return new He(t.firestore, e, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Er(t) {\n    !function(t) {\n        if (cn(t) && 0 === t.explicitOrderBy.length) throw new U(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ot(t, le))._query);\n    const n = re(t.firestore), e = new vr(t.firestore);\n    return ne(n, t._query).then((n => {\n        const r = n.map((n => new Ke(t.firestore, e, n.key, n, t.converter)));\n        return cn(t._query) && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new Je(t, r);\n    }));\n}\n\nfunction Tr(t, n, e) {\n    const r = gr((t = ot(t, he)).converter, n, e), s = Ne(De(t.firestore), \"setDoc\", t._key, r, null !== t.converter, e);\n    return Zn(re(t.firestore), [ s.toMutation(t._key, En.none()) ]);\n}\n\nfunction Ir(t, n, e, ...r) {\n    const s = De((t = ot(t, he)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (n = h(n)) || n instanceof _e ? Le(s, \"updateDoc\", t._key, n, e, r) : Ce(s, \"updateDoc\", t._key, n);\n    return Zn(re(t.firestore), [ i.toMutation(t._key, En.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Ar(t) {\n    return Zn(re((t = ot(t, he)).firestore), [ new Rn(t._key, En.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Rr(t, n) {\n    const e = me(t = ot(t, fe)), r = gr(t.converter, n), s = Ne(De(t.firestore), \"addDoc\", e._key, r, null !== e.converter, {});\n    return Zn(re(t.firestore), [ s.toMutation(e._key, En.exists(!1)) ]).then((() => e));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Pr() {\n    return new $e(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Vr() {\n    return new Fe(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Dr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new xe(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Nr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new qe(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function $r(t) {\n    return new Oe(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Sr {\n    /** @hideconstructor */\n    constructor(t, n) {\n        this._firestore = t, this._commitHandler = n, this._mutations = [], this._committed = !1, \n        this._dataReader = De(t);\n    }\n    set(t, n, e) {\n        this._verifyNotCommitted();\n        const r = Fr(t, this._firestore), s = gr(r.converter, n, e), i = Ne(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, e);\n        return this._mutations.push(i.toMutation(r._key, En.none())), this;\n    }\n    update(t, n, e, ...r) {\n        this._verifyNotCommitted();\n        const s = Fr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (n = h(n)) || n instanceof _e ? Le(this._dataReader, \"WriteBatch.update\", s._key, n, e, r) : Ce(this._dataReader, \"WriteBatch.update\", s._key, n), \n        this._mutations.push(i.toMutation(s._key, En.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const n = Fr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Rn(n._key, En.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction Fr(t, n) {\n    if ((t = h(t)).firestore !== n) throw new U(A, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function xr(t) {\n    const n = re(t = ot(t, ie));\n    return new Sr(t, (t => Zn(n, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class qr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(A, \"Firestore transactions require all reads to be executed before all writes.\");\n        const n = await te(this.datastore, t);\n        return n.forEach((t => this.recordVersion(t))), n;\n    }\n    set(t, n) {\n        this.write(n.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, n) {\n        try {\n            this.write(n.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Rn(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((n => {\n            t.delete(n.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, n) => {\n            const e = nt.fromPath(n);\n            this.mutations.push(new Pn(e, this.precondition(e)));\n        })), await Zn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let n;\n        if (t.isFoundDocument()) n = t.version; else {\n            if (!t.isNoDocument()) throw g();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            n = vt.min();\n        }\n        const e = this.readVersions.get(t.key.toString());\n        if (e) {\n            if (!n.isEqual(e)) \n            // This transaction will fail no matter what.\n            throw new U(F, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), n);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const n = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && n ? En.updateTime(n) : En.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const n = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && n) {\n            if (n.isEqual(vt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(A, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return En.updateTime(n);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return En.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Or {\n    constructor(t, n, e, r) {\n        this.asyncQueue = t, this.datastore = n, this.updateFunction = e, this.deferred = r, \n        this.Tt = 5, this.It = new Jn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Tt -= 1, this.At();\n    }\n    At() {\n        this.It.W((async () => {\n            const t = new qr(this.datastore), n = this.Rt(t);\n            n && n.then((n => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(n);\n                })).catch((t => {\n                    this.Pt(t);\n                }))));\n            })).catch((t => {\n                this.Pt(t);\n            }));\n        }));\n    }\n    Rt(t) {\n        try {\n            const n = this.updateFunction(t);\n            return !ct(n) && n.catch && n.then ? n : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Pt(t) {\n        this.Tt > 0 && this.Vt(t) ? (this.Tt -= 1, this.asyncQueue.enqueueAndForget((() => (this.At(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Vt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const n = t.code;\n            return \"aborted\" === n || \"failed-precondition\" === n || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return g();\n\n                  case T:\n                  case I:\n                  case R:\n                  case $:\n                  case O:\n                  case C:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case N:\n                    return !1;\n\n                  case A:\n                  case P:\n                  case V:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case F:\n                  case x:\n                  case q:\n                  case L:\n                    return !0;\n                }\n            }(n);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function Cr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Lr {\n    constructor(t, n, e, r, s) {\n        this.asyncQueue = t, this.timerId = n, this.targetTimeMs = e, this.op = r, this.removalCallback = s, \n        this.deferred = new k, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, n, e, r, s) {\n        const i = Date.now() + e, o = new Lr(t, n, i, r, s);\n        return o.start(e), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Ur {\n    constructor() {\n        // The last promise in the queue.\n        this.Dt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Nt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.$t = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.St = [], \n        // visible for testing\n        this.Ft = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.xt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.qt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ot = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.It = new Jn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Ct = () => {\n            const t = Cr();\n            t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.It.H();\n        };\n        const t = Cr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ct);\n    }\n    get isShuttingDown() {\n        return this.$t;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Lt(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Ut(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.$t) {\n            this.$t = !0, this.qt = t || !1;\n            const n = Cr();\n            n && \"function\" == typeof n.removeEventListener && n.removeEventListener(\"visibilitychange\", this.Ct);\n        }\n    }\n    enqueue(t) {\n        if (this.Lt(), this.$t) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const n = new k;\n        return this.Ut((() => this.$t && this.qt ? Promise.resolve() : (t().then(n.resolve, n.reject), \n        n.promise))).then((() => n.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Nt.push(t), this.kt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async kt() {\n        if (0 !== this.Nt.length) {\n            try {\n                await this.Nt[0](), this.Nt.shift(), this.It.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Nt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.It.W((() => this.kt()));\n        }\n    }\n    Ut(t) {\n        const n = this.Dt.then((() => (this.xt = !0, t().catch((t => {\n            this.Ft = t, this.xt = !1;\n            const n = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let n = t.message || \"\";\n                t.stack && (n = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return n;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw p(\"INTERNAL UNHANDLED ERROR: \", n), t;\n        })).then((t => (this.xt = !1, t))))));\n        return this.Dt = n, n;\n    }\n    enqueueAfterDelay(t, n, e) {\n        this.Lt(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ot.indexOf(t) > -1 && (n = 0);\n        const r = Lr.createAndSchedule(this, t, n, e, (t => this.jt(t)));\n        return this.St.push(r), r;\n    }\n    Lt() {\n        this.Ft && g();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Mt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Dt, await t;\n        } while (t !== this.Dt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Bt(t) {\n        for (const n of this.St) if (n.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    zt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Mt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.St.sort(((t, n) => t.targetTimeMs - n.targetTimeMs));\n            for (const n of this.St) if (n.skipDelay(), \"all\" /* All */ !== t && n.timerId === t) break;\n            return this.Mt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Gt(t) {\n        this.Ot.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    jt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const n = this.St.indexOf(t);\n        this.St.splice(n, 1);\n    }\n}\n\nclass kr {\n    /** @hideconstructor */\n    constructor(t, n) {\n        this._firestore = t, this._transaction = n, this._dataReader = De(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const n = Fr(t, this._firestore), e = new vr(this._firestore);\n        return this._transaction.lookup([ n._key ]).then((t => {\n            if (!t || 1 !== t.length) return g();\n            const r = t[0];\n            if (r.isFoundDocument()) return new He(this._firestore, e, r.key, r, n.converter);\n            if (r.isNoDocument()) return new He(this._firestore, e, n._key, null, n.converter);\n            throw g();\n        }));\n    }\n    set(t, n, e) {\n        const r = Fr(t, this._firestore), s = gr(r.converter, n, e), i = Ne(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, e);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, n, e, ...r) {\n        const s = Fr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (n = h(n)) || n instanceof _e ? Le(this._dataReader, \"Transaction.update\", s._key, n, e, r) : Ce(this._dataReader, \"Transaction.update\", s._key, n), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const n = Fr(t, this._firestore);\n        return this._transaction.delete(n._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function jr(t, n) {\n    const e = re(t = ot(t, ie)), r = new k;\n    return new Or(new Ur, e, (e => n(new kr(t, e))), r).run(), r.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    f = t;\n}(`${s}_lite`), e(new i(\"firestore/lite\", ((t, {options: n}) => {\n    const e = t.getProvider(\"app\").getImmediate(), r = new ie(e, new z(t.getProvider(\"auth-internal\")), new Y(t.getProvider(\"app-check-internal\")));\n    return n && r._setSettings(n), r;\n}), \"PUBLIC\")), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.4.3\", \"\"), r(\"firestore-lite\", \"3.4.3\", \"__BUILD_TARGET__\");\n\nexport { ve as Bytes, fe as CollectionReference, he as DocumentReference, He as DocumentSnapshot, _e as FieldPath, be as FieldValue, ie as Firestore, U as FirestoreError, Ee as GeoPoint, le as Query, tr as QueryConstraint, Ke as QueryDocumentSnapshot, Je as QuerySnapshot, gt as Timestamp, kr as Transaction, Sr as WriteBatch, Rr as addDoc, Nr as arrayRemove, Dr as arrayUnion, de as collection, we as collectionGroup, ce as connectFirestoreEmulator, Ar as deleteDoc, Pr as deleteField, me as doc, ge as documentId, wr as endAt, dr as endBefore, br as getDoc, Er as getDocs, ue as getFirestore, $r as increment, oe as initializeFirestore, ur as limit, cr as limitToLast, ir as orderBy, nr as query, ye as queryEqual, pe as refEqual, jr as runTransaction, Vr as serverTimestamp, Tr as setDoc, w as setLogLevel, Xe as snapshotEqual, lr as startAfter, hr as startAt, ae as terminate, Ir as updateDoc, rr as where, xr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"]},"metadata":{},"sourceType":"module"}